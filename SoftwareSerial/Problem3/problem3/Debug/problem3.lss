
problem3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00800200  000012c0  00001354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a8  00800268  00800268  000013bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000013bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  00001430  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024b3  00000000  00000000  00001628  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011d0  00000000  00000000  00003adb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013c3  00000000  00000000  00004cab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000790  00000000  00000000  00006070  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a7a  00000000  00000000  00006800  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d70  00000000  00000000  0000727a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00008fea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	32 c1       	rjmp	.+612    	; 0x266 <__ctors_end>
       2:	00 00       	nop
       4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
       6:	00 00       	nop
       8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
       a:	00 00       	nop
       c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
       e:	00 00       	nop
      10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
      12:	00 00       	nop
      14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
      16:	00 00       	nop
      18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
      22:	00 00       	nop
      24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
      26:	00 00       	nop
      28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
      32:	00 00       	nop
      34:	38 c1       	rjmp	.+624    	; 0x2a6 <__bad_interrupt>
      36:	00 00       	nop
      38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
      42:	00 00       	nop
      44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
      46:	00 00       	nop
      48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
      52:	00 00       	nop
      54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
      56:	00 00       	nop
      58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
      62:	00 00       	nop
      64:	2a c6       	rjmp	.+3156   	; 0xcba <__vector_25>
      66:	00 00       	nop
      68:	b0 c4       	rjmp	.+2400   	; 0x9ca <__vector_26>
      6a:	00 00       	nop
      6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
      72:	00 00       	nop
      74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
      76:	00 00       	nop
      78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
      82:	00 00       	nop
      84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
      86:	00 00       	nop
      88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	0c c1       	rjmp	.+536    	; 0x2a6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	3f c6       	rjmp	.+3198   	; 0xd10 <__vector_36>
      92:	00 00       	nop
      94:	e6 c4       	rjmp	.+2508   	; 0xa62 <__vector_37>
      96:	00 00       	nop
      98:	06 c1       	rjmp	.+524    	; 0x2a6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	04 c1       	rjmp	.+520    	; 0x2a6 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	02 c1       	rjmp	.+516    	; 0x2a6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	00 c1       	rjmp	.+512    	; 0x2a6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	fe c0       	rjmp	.+508    	; 0x2a6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	fc c0       	rjmp	.+504    	; 0x2a6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	fa c0       	rjmp	.+500    	; 0x2a6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	f8 c0       	rjmp	.+496    	; 0x2a6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	f6 c0       	rjmp	.+492    	; 0x2a6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	f4 c0       	rjmp	.+488    	; 0x2a6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	f2 c0       	rjmp	.+484    	; 0x2a6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	f0 c0       	rjmp	.+480    	; 0x2a6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ee c0       	rjmp	.+476    	; 0x2a6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4c c6       	rjmp	.+3224   	; 0xd66 <__vector_51>
      ce:	00 00       	nop
      d0:	14 c5       	rjmp	.+2600   	; 0xafa <__vector_52>
      d2:	00 00       	nop
      d4:	e8 c0       	rjmp	.+464    	; 0x2a6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	71 c6       	rjmp	.+3298   	; 0xdbc <__vector_54>
      da:	00 00       	nop
      dc:	5a c5       	rjmp	.+2740   	; 0xb92 <__vector_55>
      de:	00 00       	nop
      e0:	e2 c0       	rjmp	.+452    	; 0x2a6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	bb 01       	movw	r22, r22
      e6:	bd 01       	movw	r22, r26
      e8:	bf 01       	movw	r22, r30
      ea:	ca 01       	movw	r24, r20
      ec:	ca 01       	movw	r24, r20
      ee:	ca 01       	movw	r24, r20
      f0:	ca 01       	movw	r24, r20
      f2:	ca 01       	movw	r24, r20
      f4:	ca 01       	movw	r24, r20
      f6:	ca 01       	movw	r24, r20
      f8:	ca 01       	movw	r24, r20
      fa:	ca 01       	movw	r24, r20
      fc:	ca 01       	movw	r24, r20
      fe:	ca 01       	movw	r24, r20
     100:	ca 01       	movw	r24, r20
     102:	ca 01       	movw	r24, r20
     104:	ca 01       	movw	r24, r20
     106:	ca 01       	movw	r24, r20
     108:	ca 01       	movw	r24, r20
     10a:	ca 01       	movw	r24, r20
     10c:	ca 01       	movw	r24, r20
     10e:	ca 01       	movw	r24, r20
     110:	ca 01       	movw	r24, r20
     112:	ca 01       	movw	r24, r20
     114:	ca 01       	movw	r24, r20
     116:	ca 01       	movw	r24, r20
     118:	ca 01       	movw	r24, r20
     11a:	ca 01       	movw	r24, r20
     11c:	ca 01       	movw	r24, r20
     11e:	ca 01       	movw	r24, r20
     120:	ca 01       	movw	r24, r20
     122:	ca 01       	movw	r24, r20
     124:	ca 01       	movw	r24, r20
     126:	ca 01       	movw	r24, r20
     128:	ca 01       	movw	r24, r20
     12a:	ca 01       	movw	r24, r20
     12c:	ca 01       	movw	r24, r20
     12e:	ca 01       	movw	r24, r20
     130:	ca 01       	movw	r24, r20
     132:	ca 01       	movw	r24, r20
     134:	b9 01       	movw	r22, r18
     136:	b7 01       	movw	r22, r14
     138:	b5 01       	movw	r22, r10
     13a:	c1 01       	movw	r24, r2
     13c:	57 02       	muls	r21, r23
     13e:	60 02       	muls	r22, r16
     140:	5a 02       	muls	r21, r26
     142:	60 02       	muls	r22, r16
     144:	5d 02       	muls	r21, r29
     146:	60 02       	muls	r22, r16
     148:	63 02       	muls	r22, r19
     14a:	60 02       	muls	r22, r16
     14c:	57 02       	muls	r21, r23
     14e:	60 02       	muls	r22, r16
     150:	5a 02       	muls	r21, r26
     152:	60 02       	muls	r22, r16
     154:	5d 02       	muls	r21, r29
     156:	60 02       	muls	r22, r16
     158:	63 02       	muls	r22, r19
     15a:	60 02       	muls	r22, r16
     15c:	60 02       	muls	r22, r16
     15e:	60 02       	muls	r22, r16
     160:	60 02       	muls	r22, r16
     162:	60 02       	muls	r22, r16
     164:	60 02       	muls	r22, r16
     166:	60 02       	muls	r22, r16
     168:	60 02       	muls	r22, r16
     16a:	60 02       	muls	r22, r16
     16c:	60 02       	muls	r22, r16
     16e:	60 02       	muls	r22, r16
     170:	60 02       	muls	r22, r16
     172:	60 02       	muls	r22, r16
     174:	60 02       	muls	r22, r16
     176:	60 02       	muls	r22, r16
     178:	60 02       	muls	r22, r16
     17a:	60 02       	muls	r22, r16
     17c:	57 02       	muls	r21, r23
     17e:	60 02       	muls	r22, r16
     180:	5a 02       	muls	r21, r26
     182:	60 02       	muls	r22, r16
     184:	5d 02       	muls	r21, r29
     186:	60 02       	muls	r22, r16
     188:	63 02       	muls	r22, r19
     18a:	60 02       	muls	r22, r16
     18c:	57 02       	muls	r21, r23
     18e:	60 02       	muls	r22, r16
     190:	5a 02       	muls	r21, r26
     192:	60 02       	muls	r22, r16
     194:	5d 02       	muls	r21, r29
     196:	60 02       	muls	r22, r16
     198:	63 02       	muls	r22, r19
     19a:	60 02       	muls	r22, r16
     19c:	57 02       	muls	r21, r23
     19e:	60 02       	muls	r22, r16
     1a0:	5a 02       	muls	r21, r26
     1a2:	60 02       	muls	r22, r16
     1a4:	5d 02       	muls	r21, r29
     1a6:	60 02       	muls	r22, r16
     1a8:	63 02       	muls	r22, r19
     1aa:	60 02       	muls	r22, r16
     1ac:	57 02       	muls	r21, r23
     1ae:	60 02       	muls	r22, r16
     1b0:	5a 02       	muls	r21, r26
     1b2:	60 02       	muls	r22, r16
     1b4:	5d 02       	muls	r21, r29
     1b6:	60 02       	muls	r22, r16
     1b8:	63 02       	muls	r22, r19
     1ba:	79 02       	muls	r23, r25
     1bc:	76 02       	muls	r23, r22
     1be:	79 02       	muls	r23, r25
     1c0:	76 02       	muls	r23, r22
     1c2:	79 02       	muls	r23, r25
     1c4:	76 02       	muls	r23, r22
     1c6:	79 02       	muls	r23, r25
     1c8:	76 02       	muls	r23, r22
     1ca:	79 02       	muls	r23, r25
     1cc:	76 02       	muls	r23, r22
     1ce:	79 02       	muls	r23, r25
     1d0:	76 02       	muls	r23, r22
     1d2:	79 02       	muls	r23, r25
     1d4:	76 02       	muls	r23, r22
     1d6:	79 02       	muls	r23, r25
     1d8:	76 02       	muls	r23, r22
     1da:	73 02       	muls	r23, r19
     1dc:	76 02       	muls	r23, r22
     1de:	73 02       	muls	r23, r19
     1e0:	76 02       	muls	r23, r22
     1e2:	73 02       	muls	r23, r19
     1e4:	76 02       	muls	r23, r22
     1e6:	73 02       	muls	r23, r19
     1e8:	76 02       	muls	r23, r22
     1ea:	73 02       	muls	r23, r19
     1ec:	76 02       	muls	r23, r22
     1ee:	73 02       	muls	r23, r19
     1f0:	76 02       	muls	r23, r22
     1f2:	73 02       	muls	r23, r19
     1f4:	76 02       	muls	r23, r22
     1f6:	73 02       	muls	r23, r19
     1f8:	8c 02       	muls	r24, r28
     1fa:	89 02       	muls	r24, r25
     1fc:	8c 02       	muls	r24, r28
     1fe:	89 02       	muls	r24, r25
     200:	8c 02       	muls	r24, r28
     202:	89 02       	muls	r24, r25
     204:	8c 02       	muls	r24, r28
     206:	89 02       	muls	r24, r25
     208:	89 02       	muls	r24, r25
     20a:	89 02       	muls	r24, r25
     20c:	89 02       	muls	r24, r25
     20e:	89 02       	muls	r24, r25
     210:	89 02       	muls	r24, r25
     212:	89 02       	muls	r24, r25
     214:	89 02       	muls	r24, r25
     216:	89 02       	muls	r24, r25
     218:	89 02       	muls	r24, r25
     21a:	89 02       	muls	r24, r25
     21c:	89 02       	muls	r24, r25
     21e:	89 02       	muls	r24, r25
     220:	89 02       	muls	r24, r25
     222:	89 02       	muls	r24, r25
     224:	89 02       	muls	r24, r25
     226:	89 02       	muls	r24, r25
     228:	89 02       	muls	r24, r25
     22a:	89 02       	muls	r24, r25
     22c:	89 02       	muls	r24, r25
     22e:	89 02       	muls	r24, r25
     230:	89 02       	muls	r24, r25
     232:	89 02       	muls	r24, r25
     234:	89 02       	muls	r24, r25
     236:	89 02       	muls	r24, r25
     238:	8c 02       	muls	r24, r28
     23a:	89 02       	muls	r24, r25
     23c:	8c 02       	muls	r24, r28
     23e:	89 02       	muls	r24, r25
     240:	8c 02       	muls	r24, r28
     242:	89 02       	muls	r24, r25
     244:	8c 02       	muls	r24, r28
     246:	89 02       	muls	r24, r25
     248:	89 02       	muls	r24, r25
     24a:	89 02       	muls	r24, r25
     24c:	89 02       	muls	r24, r25
     24e:	89 02       	muls	r24, r25
     250:	89 02       	muls	r24, r25
     252:	89 02       	muls	r24, r25
     254:	89 02       	muls	r24, r25
     256:	89 02       	muls	r24, r25
     258:	8c 02       	muls	r24, r28
     25a:	89 02       	muls	r24, r25
     25c:	8c 02       	muls	r24, r28
     25e:	89 02       	muls	r24, r25
     260:	8c 02       	muls	r24, r28
     262:	89 02       	muls	r24, r25
     264:	8c 02       	muls	r24, r28

00000266 <__ctors_end>:
     266:	11 24       	eor	r1, r1
     268:	1f be       	out	0x3f, r1	; 63
     26a:	cf ef       	ldi	r28, 0xFF	; 255
     26c:	d1 e2       	ldi	r29, 0x21	; 33
     26e:	de bf       	out	0x3e, r29	; 62
     270:	cd bf       	out	0x3d, r28	; 61
     272:	00 e0       	ldi	r16, 0x00	; 0
     274:	0c bf       	out	0x3c, r16	; 60

00000276 <__do_copy_data>:
     276:	12 e0       	ldi	r17, 0x02	; 2
     278:	a0 e0       	ldi	r26, 0x00	; 0
     27a:	b2 e0       	ldi	r27, 0x02	; 2
     27c:	e0 ec       	ldi	r30, 0xC0	; 192
     27e:	f2 e1       	ldi	r31, 0x12	; 18
     280:	00 e0       	ldi	r16, 0x00	; 0
     282:	0b bf       	out	0x3b, r16	; 59
     284:	02 c0       	rjmp	.+4      	; 0x28a <__do_copy_data+0x14>
     286:	07 90       	elpm	r0, Z+
     288:	0d 92       	st	X+, r0
     28a:	a8 36       	cpi	r26, 0x68	; 104
     28c:	b1 07       	cpc	r27, r17
     28e:	d9 f7       	brne	.-10     	; 0x286 <__do_copy_data+0x10>

00000290 <__do_clear_bss>:
     290:	24 e0       	ldi	r18, 0x04	; 4
     292:	a8 e6       	ldi	r26, 0x68	; 104
     294:	b2 e0       	ldi	r27, 0x02	; 2
     296:	01 c0       	rjmp	.+2      	; 0x29a <.do_clear_bss_start>

00000298 <.do_clear_bss_loop>:
     298:	1d 92       	st	X+, r1

0000029a <.do_clear_bss_start>:
     29a:	a0 31       	cpi	r26, 0x10	; 16
     29c:	b2 07       	cpc	r27, r18
     29e:	e1 f7       	brne	.-8      	; 0x298 <.do_clear_bss_loop>
     2a0:	42 d0       	rcall	.+132    	; 0x326 <main>
     2a2:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <_exit>

000002a6 <__bad_interrupt>:
     2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <delay_usec>:
 *  Author: caseyem, abbottbf
 */ 
			.text
			.global delay_usec
delay_usec:
			cpi r25, 0x00
     2a8:	90 30       	cpi	r25, 0x00	; 0
			brne preloop
     2aa:	69 f4       	brne	.+26     	; 0x2c6 <preloop>

000002ac <checkone>:
checkone: /* Check if the 32 bits of r25 and r24 are equal to 0x01, if they are, end, if they are not, continue */
			cpi r24, 0x01
     2ac:	81 30       	cpi	r24, 0x01	; 1
			breq end
     2ae:	41 f1       	breq	.+80     	; 0x300 <end>
			brlo setzero
     2b0:	10 f0       	brcs	.+4      	; 0x2b6 <setzero>
			dec r24
     2b2:	8a 95       	dec	r24
			jmp loopbody
     2b4:	20 c0       	rjmp	.+64     	; 0x2f6 <loopbody>

000002b6 <setzero>:
setzero:
			sbr r25, 0xFF
     2b6:	9f 6f       	ori	r25, 0xFF	; 255
			sbr r24, 0xFE
			call spacer /* stall for 16 cycles */
     2b8:	8e 6f       	ori	r24, 0xFE	; 254
     2ba:	23 d0       	rcall	.+70     	; 0x302 <spacer>
	...
			nop
			nop
			nop
			nop
			jmp loopbody
     2c4:	18 c0       	rjmp	.+48     	; 0x2f6 <loopbody>

000002c6 <preloop>:
preloop:
			cpi r24, 0x01
     2c6:	81 30       	cpi	r24, 0x01	; 1
			brlo initlarge
     2c8:	58 f1       	brcs	.+86     	; 0x320 <initlarge>
			breq stall16
			nop
     2ca:	19 f0       	breq	.+6      	; 0x2d2 <stall16>
			dec r24
     2cc:	00 00       	nop
			jmp loopless
     2ce:	8a 95       	dec	r24
stall16: /* stall for 16 cycles and go back to loop body */
			sbr r24, 0xFF
     2d0:	14 c0       	rjmp	.+40     	; 0x2fa <loopless>

000002d2 <stall16>:
			dec r25
     2d2:	8f 6f       	ori	r24, 0xFF	; 255
			nop
			call spacer
     2d4:	9a 95       	dec	r25
     2d6:	00 00       	nop
			nop
     2d8:	14 d0       	rcall	.+40     	; 0x302 <spacer>
			nop
     2da:	00 00       	nop
			jmp loopbody
     2dc:	00 00       	nop
looplogic:
			cpi r25, 0x01
     2de:	0b c0       	rjmp	.+22     	; 0x2f6 <loopbody>

000002e0 <looplogic>:
			brlo end			// If r25 is negative, end
     2e0:	91 30       	cpi	r25, 0x01	; 1
			dec r25				// Subtract 1 from r25
     2e2:	70 f0       	brcs	.+28     	; 0x300 <end>
			sbr r24, 0xff		// Set r24 to 0xff
     2e4:	9a 95       	dec	r25
			jmp loopbody
     2e6:	8f 6f       	ori	r24, 0xFF	; 255
     2e8:	06 c0       	rjmp	.+12     	; 0x2f6 <loopbody>

000002ea <loopextra>:
loopextra:
			nop
     2ea:	00 00       	nop
			nop
     2ec:	00 00       	nop
	...

000002f0 <loopwrap>:
			nop
loopwrap:   
			nop
			nop
     2f0:	00 00       	nop
			nop
     2f2:	00 00       	nop
	...

000002f6 <loopbody>:
loopbody:
			nop
			nop
     2f6:	00 00       	nop
	...

000002fa <loopless>:
loopless:	
			nop
			nop
     2fa:	00 00       	nop
			jmp update
     2fc:	00 00       	nop
     2fe:	03 c0       	rjmp	.+6      	; 0x306 <update>

00000300 <end>:
end:
			ret					// Return, 5 cycles
     300:	08 95       	ret

00000302 <spacer>:
spacer:
			nop
     302:	00 00       	nop
			ret
     304:	08 95       	ret

00000306 <update>:
update:
			dec r24
			cpi r24, 0x00
     306:	8a 95       	dec	r24
			brne loopextra
     308:	80 30       	cpi	r24, 0x00	; 0
			nop
     30a:	79 f7       	brne	.-34     	; 0x2ea <loopextra>
			cpi r25, 0x01
			brlo end			// If r25 is negative or 0, end
     30c:	00 00       	nop
			dec r25				// Subtract 1 from r25
     30e:	91 30       	cpi	r25, 0x01	; 1
			sbr r24, 0xff		// Set r24 to 0xff
			call spacer			// Execute an extra cycle before returning back
     310:	b8 f3       	brcs	.-18     	; 0x300 <end>
     312:	9a 95       	dec	r25
			nop
     314:	8f 6f       	ori	r24, 0xFF	; 255
			nop
     316:	f5 df       	rcall	.-22     	; 0x302 <spacer>
			nop
     318:	00 00       	nop
			jmp loopwrap		// Go back to main loop
     31a:	00 00       	nop
     31c:	00 00       	nop

initlarge:	
			dec r25
     31e:	e8 cf       	rjmp	.-48     	; 0x2f0 <loopwrap>

00000320 <initlarge>:
			sbr r24, 0xff
     320:	9a 95       	dec	r25
     322:	8f 6f       	ori	r24, 0xFF	; 255
     324:	ea cf       	rjmp	.-44     	; 0x2fa <loopless>

00000326 <main>:
	long baudrate = 9600L;  // initially--can change after this works
	int tx_pin = 12;
	int rx_pin = 11;  // for example
	int framing = SERIAL_8N1;
	
	init_sw_serial(rx_pin, tx_pin, baudrate, framing);  // this is your function
     326:	06 e0       	ldi	r16, 0x06	; 6
     328:	10 e0       	ldi	r17, 0x00	; 0
     32a:	20 e8       	ldi	r18, 0x80	; 128
     32c:	35 e2       	ldi	r19, 0x25	; 37
     32e:	40 e0       	ldi	r20, 0x00	; 0
     330:	50 e0       	ldi	r21, 0x00	; 0
     332:	6c e0       	ldi	r22, 0x0C	; 12
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	8b e0       	ldi	r24, 0x0B	; 11
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	3e d0       	rcall	.+124    	; 0x3b8 <init_sw_serial>
	init_sw_serial_getc_test(baudrate, framing);   // library function: note we need the baudrate and framing here
     33c:	46 e0       	ldi	r20, 0x06	; 6
     33e:	50 e0       	ldi	r21, 0x00	; 0
     340:	60 e8       	ldi	r22, 0x80	; 128
     342:	75 e2       	ldi	r23, 0x25	; 37
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	90 e0       	ldi	r25, 0x00	; 0

	debug_init();
     348:	76 d7       	rcall	.+3820   	; 0x1236 <init_sw_serial_getc_test>
	sw_serial_getc();  // throw away first char
     34a:	ad d7       	rcall	.+3930   	; 0x12a6 <debug_init>
	while(1) {
		char c = sw_serial_getc();
     34c:	e8 d0       	rcall	.+464    	; 0x51e <sw_serial_getc>
     34e:	e7 d0       	rcall	.+462    	; 0x51e <sw_serial_getc>
		// convert any alpha char c to opposite case
		// you'll need a little code here to do this...
		sw_serial_putc(c);
     350:	66 d0       	rcall	.+204    	; 0x41e <sw_serial_putc>
     352:	86 d7       	rcall	.+3852   	; 0x1260 <test_sw_serial_getc>
		test_sw_serial_getc();   // library test function
     354:	fc cf       	rjmp	.-8      	; 0x34e <main+0x28>

00000356 <get_portb_bits>:
     356:	0a 97       	sbiw	r24, 0x0a	; 10
     358:	8c 32       	cpi	r24, 0x2C	; 44
	for (int i=0; i < str_length; i++) 
	{
		sw_serial_putc(str[i]);
		delay_usec(delay_time);
	}
}
     35a:	91 05       	cpc	r25, r1
     35c:	d8 f4       	brcc	.+54     	; 0x394 <get_portb_bits+0x3e>
     35e:	fc 01       	movw	r30, r24
     360:	88 27       	eor	r24, r24
     362:	ee 58       	subi	r30, 0x8E	; 142
     364:	ff 4f       	sbci	r31, 0xFF	; 255
     366:	8f 4f       	sbci	r24, 0xFF	; 255
     368:	a1 c7       	rjmp	.+3906   	; 0x12ac <__tablejump2__>
     36a:	21 e0       	ldi	r18, 0x01	; 1
     36c:	0b c0       	rjmp	.+22     	; 0x384 <get_portb_bits+0x2e>
     36e:	22 e0       	ldi	r18, 0x02	; 2
     370:	09 c0       	rjmp	.+18     	; 0x384 <get_portb_bits+0x2e>
     372:	23 e0       	ldi	r18, 0x03	; 3
     374:	07 c0       	rjmp	.+14     	; 0x384 <get_portb_bits+0x2e>
     376:	24 e0       	ldi	r18, 0x04	; 4
     378:	05 c0       	rjmp	.+10     	; 0x384 <get_portb_bits+0x2e>
     37a:	25 e0       	ldi	r18, 0x05	; 5
     37c:	03 c0       	rjmp	.+6      	; 0x384 <get_portb_bits+0x2e>
     37e:	26 e0       	ldi	r18, 0x06	; 6
     380:	01 c0       	rjmp	.+2      	; 0x384 <get_portb_bits+0x2e>
     382:	20 e0       	ldi	r18, 0x00	; 0
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	02 c0       	rjmp	.+4      	; 0x38e <get_portb_bits+0x38>
     38a:	88 0f       	add	r24, r24
     38c:	99 1f       	adc	r25, r25
     38e:	2a 95       	dec	r18
     390:	e2 f7       	brpl	.-8      	; 0x38a <get_portb_bits+0x34>
     392:	08 95       	ret
     394:	8f ef       	ldi	r24, 0xFF	; 255
     396:	9f ef       	ldi	r25, 0xFF	; 255
     398:	08 95       	ret

0000039a <get_portb_bit_number>:
     39a:	80 fd       	sbrc	r24, 0
     39c:	09 c0       	rjmp	.+18     	; 0x3b0 <get_portb_bit_number+0x16>
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	2f 5f       	subi	r18, 0xFF	; 255
     3a4:	3f 4f       	sbci	r19, 0xFF	; 255
     3a6:	95 95       	asr	r25
     3a8:	87 95       	ror	r24
     3aa:	80 ff       	sbrs	r24, 0
     3ac:	fa cf       	rjmp	.-12     	; 0x3a2 <get_portb_bit_number+0x8>
     3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <get_portb_bit_number+0x1a>
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	c9 01       	movw	r24, r18
     3b6:	08 95       	ret

000003b8 <init_sw_serial>:
     3b8:	ef 92       	push	r14
     3ba:	ff 92       	push	r15
     3bc:	0f 93       	push	r16
     3be:	1f 93       	push	r17
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	ec 01       	movw	r28, r24
     3c6:	7b 01       	movw	r14, r22
     3c8:	ca 01       	movw	r24, r20
     3ca:	b9 01       	movw	r22, r18
     3cc:	c1 d1       	rcall	.+898    	; 0x750 <__floatsisf>
     3ce:	9b 01       	movw	r18, r22
     3d0:	ac 01       	movw	r20, r24
     3d2:	60 e0       	ldi	r22, 0x00	; 0
     3d4:	70 e0       	ldi	r23, 0x00	; 0
     3d6:	80 e8       	ldi	r24, 0x80	; 128
     3d8:	9f e3       	ldi	r25, 0x3F	; 63
     3da:	1f d1       	rcall	.+574    	; 0x61a <__divsf3>
     3dc:	20 e0       	ldi	r18, 0x00	; 0
     3de:	34 e2       	ldi	r19, 0x24	; 36
     3e0:	44 e7       	ldi	r20, 0x74	; 116
     3e2:	59 e4       	ldi	r21, 0x49	; 73
     3e4:	41 d2       	rcall	.+1154   	; 0x868 <__mulsf3>
     3e6:	81 d1       	rcall	.+770    	; 0x6ea <__fixsfsi>
     3e8:	70 93 6f 02 	sts	0x026F, r23	; 0x80026f <delay_time+0x1>
     3ec:	60 93 6e 02 	sts	0x026E, r22	; 0x80026e <delay_time>
     3f0:	c7 01       	movw	r24, r14
     3f2:	b1 df       	rcall	.-158    	; 0x356 <get_portb_bits>
     3f4:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <tx_pin+0x1>
     3f8:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <tx_pin>
     3fc:	ce 01       	movw	r24, r28
     3fe:	ab df       	rcall	.-170    	; 0x356 <get_portb_bits>
     400:	90 93 6d 02 	sts	0x026D, r25	; 0x80026d <rx_pin+0x1>
     404:	80 93 6c 02 	sts	0x026C, r24	; 0x80026c <rx_pin>
     408:	10 93 69 02 	sts	0x0269, r17	; 0x800269 <__data_end+0x1>
     40c:	00 93 68 02 	sts	0x0268, r16	; 0x800268 <__data_end>
     410:	df 91       	pop	r29
     412:	cf 91       	pop	r28
     414:	1f 91       	pop	r17
     416:	0f 91       	pop	r16
     418:	ff 90       	pop	r15
     41a:	ef 90       	pop	r14
     41c:	08 95       	ret

0000041e <sw_serial_putc>:
     41e:	ff 92       	push	r15
     420:	0f 93       	push	r16
     422:	1f 93       	push	r17
     424:	cf 93       	push	r28
     426:	df 93       	push	r29
     428:	08 2f       	mov	r16, r24
     42a:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <tx_pin>
     42e:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <tx_pin+0x1>
     432:	b3 df       	rcall	.-154    	; 0x39a <get_portb_bit_number>
     434:	f8 2e       	mov	r15, r24
     436:	15 b8       	out	0x05, r1	; 5
     438:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
     43c:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
     440:	33 df       	rcall	.-410    	; 0x2a8 <delay_usec>
     442:	c0 e0       	ldi	r28, 0x00	; 0
     444:	d0 e0       	ldi	r29, 0x00	; 0
     446:	10 e0       	ldi	r17, 0x00	; 0
     448:	98 01       	movw	r18, r16
     44a:	0c 2e       	mov	r0, r28
     44c:	02 c0       	rjmp	.+4      	; 0x452 <sw_serial_putc+0x34>
     44e:	35 95       	asr	r19
     450:	27 95       	ror	r18
     452:	0a 94       	dec	r0
     454:	e2 f7       	brpl	.-8      	; 0x44e <sw_serial_putc+0x30>
     456:	21 70       	andi	r18, 0x01	; 1
     458:	33 27       	eor	r19, r19
     45a:	0f 2c       	mov	r0, r15
     45c:	02 c0       	rjmp	.+4      	; 0x462 <sw_serial_putc+0x44>
     45e:	22 0f       	add	r18, r18
     460:	33 1f       	adc	r19, r19
     462:	0a 94       	dec	r0
     464:	e2 f7       	brpl	.-8      	; 0x45e <sw_serial_putc+0x40>
     466:	25 b9       	out	0x05, r18	; 5
     468:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
     46c:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
     470:	1b df       	rcall	.-458    	; 0x2a8 <delay_usec>
     472:	21 96       	adiw	r28, 0x01	; 1
     474:	c8 30       	cpi	r28, 0x08	; 8
     476:	d1 05       	cpc	r29, r1
     478:	39 f7       	brne	.-50     	; 0x448 <sw_serial_putc+0x2a>
     47a:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <tx_pin>
     47e:	85 b9       	out	0x05, r24	; 5
     480:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
     484:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
     488:	0f df       	rcall	.-482    	; 0x2a8 <delay_usec>
     48a:	df 91       	pop	r29
     48c:	cf 91       	pop	r28
     48e:	1f 91       	pop	r17
     490:	0f 91       	pop	r16
     492:	ff 90       	pop	r15
     494:	08 95       	ret

00000496 <get_num_data_bits>:
}

int get_num_data_bits()
{
	int result = 0;
	switch(framing)
     496:	e0 91 68 02 	lds	r30, 0x0268	; 0x800268 <__data_end>
     49a:	f0 91 69 02 	lds	r31, 0x0269	; 0x800269 <__data_end+0x1>
     49e:	ef 33       	cpi	r30, 0x3F	; 63
     4a0:	f1 05       	cpc	r31, r1
     4a2:	70 f4       	brcc	.+28     	; 0x4c0 <get_num_data_bits+0x2a>
     4a4:	88 27       	eor	r24, r24
     4a6:	e2 56       	subi	r30, 0x62	; 98
     4a8:	ff 4f       	sbci	r31, 0xFF	; 255
     4aa:	8f 4f       	sbci	r24, 0xFF	; 255
     4ac:	ff c6       	rjmp	.+3582   	; 0x12ac <__tablejump2__>
		case SERIAL_5E2:
		case SERIAL_5N1:
		case SERIAL_5N2:
		case SERIAL_5O1:
		case SERIAL_5O2:
			result = 5;
     4ae:	85 e0       	ldi	r24, 0x05	; 5
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	08 95       	ret
		case SERIAL_6E2:
		case SERIAL_6N1:
		case SERIAL_6N2:
		case SERIAL_6O1:
		case SERIAL_6O2:
			result = 6;
     4b4:	86 e0       	ldi	r24, 0x06	; 6
     4b6:	90 e0       	ldi	r25, 0x00	; 0
			break;
     4b8:	08 95       	ret
		case SERIAL_7E2:
		case SERIAL_7N1:
		case SERIAL_7N2:
		case SERIAL_7O1:
		case SERIAL_7O2:
			result = 7;
     4ba:	87 e0       	ldi	r24, 0x07	; 7
     4bc:	90 e0       	ldi	r25, 0x00	; 0
			break;
     4be:	08 95       	ret
		default:
			result = -1;
     4c0:	8f ef       	ldi	r24, 0xFF	; 255
     4c2:	9f ef       	ldi	r25, 0xFF	; 255
     4c4:	08 95       	ret
		case SERIAL_8N2:
		case SERIAL_8O1:
		case SERIAL_8O2:
		case SERIAL_8E1:
		case SERIAL_8E2:
			result = 8;
     4c6:	88 e0       	ldi	r24, 0x08	; 8
     4c8:	90 e0       	ldi	r25, 0x00	; 0
			break;
		default:
			result = -1;
	}
	return result;
}
     4ca:	08 95       	ret

000004cc <get_parity>:

int get_parity()
{
	int result = 0;
	switch(framing)
     4cc:	e0 91 68 02 	lds	r30, 0x0268	; 0x800268 <__data_end>
     4d0:	f0 91 69 02 	lds	r31, 0x0269	; 0x800269 <__data_end+0x1>
     4d4:	b0 97       	sbiw	r30, 0x20	; 32
     4d6:	ef 31       	cpi	r30, 0x1F	; 31
     4d8:	f1 05       	cpc	r31, r1
     4da:	40 f4       	brcc	.+16     	; 0x4ec <get_parity+0x20>
     4dc:	88 27       	eor	r24, r24
     4de:	e3 52       	subi	r30, 0x23	; 35
     4e0:	ff 4f       	sbci	r31, 0xFF	; 255
     4e2:	8f 4f       	sbci	r24, 0xFF	; 255
     4e4:	e3 c6       	rjmp	.+3526   	; 0x12ac <__tablejump2__>
		case SERIAL_7O2:
		case SERIAL_6O1:
		case SERIAL_6O2:
		case SERIAL_5O1:
		case SERIAL_5O2:
		result = PAR_O;
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	08 95       	ret
		break;
		default:
		result = 0;
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	08 95       	ret
		case SERIAL_7E2:
		case SERIAL_6E1:
		case SERIAL_6E2:
		case SERIAL_5E1:
		case SERIAL_5E2:
		result = PAR_E;
     4f2:	82 e0       	ldi	r24, 0x02	; 2
     4f4:	90 e0       	ldi	r25, 0x00	; 0
		break;
		default:
		result = 0;
	}
	return result;
}
     4f6:	08 95       	ret

000004f8 <has_extra_stop>:

int has_extra_stop()
{
	int result = 0;
	switch(framing)
     4f8:	e0 91 68 02 	lds	r30, 0x0268	; 0x800268 <__data_end>
     4fc:	f0 91 69 02 	lds	r31, 0x0269	; 0x800269 <__data_end+0x1>
     500:	38 97       	sbiw	r30, 0x08	; 8
     502:	e7 33       	cpi	r30, 0x37	; 55
     504:	f1 05       	cpc	r31, r1
     506:	28 f4       	brcc	.+10     	; 0x512 <has_extra_stop+0x1a>
     508:	88 27       	eor	r24, r24
     50a:	e4 50       	subi	r30, 0x04	; 4
     50c:	ff 4f       	sbci	r31, 0xFF	; 255
     50e:	8f 4f       	sbci	r24, 0xFF	; 255
     510:	cd c6       	rjmp	.+3482   	; 0x12ac <__tablejump2__>
		case SERIAL_6N2:
		case SERIAL_5N2:
		result = 1;
		break;
		default:
		result = 0;
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	08 95       	ret
		case SERIAL_5O2:
		case SERIAL_8N2:
		case SERIAL_7N2:
		case SERIAL_6N2:
		case SERIAL_5N2:
		result = 1;
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	90 e0       	ldi	r25, 0x00	; 0
		break;
		default:
		result = 0;
	}
	return result;
}
     51c:	08 95       	ret

0000051e <sw_serial_getc>:

char sw_serial_getc()
{
     51e:	cf 92       	push	r12
     520:	df 92       	push	r13
     522:	ef 92       	push	r14
     524:	ff 92       	push	r15
     526:	0f 93       	push	r16
     528:	1f 93       	push	r17
     52a:	cf 93       	push	r28
     52c:	df 93       	push	r29
	int rx_bit_num = get_portb_bit_number(rx_pin);
     52e:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <rx_pin>
     532:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <rx_pin+0x1>
     536:	31 df       	rcall	.-414    	; 0x39a <get_portb_bit_number>
     538:	d8 2e       	mov	r13, r24
	int databits = get_num_data_bits();
     53a:	ad df       	rcall	.-166    	; 0x496 <get_num_data_bits>
     53c:	8c 01       	movw	r16, r24
     53e:	85 b1       	in	r24, 0x05	; 5
	char result = 0;
	
	while((PORTB & (0x1 << rx_bit_num)) >> rx_bit_num == 1)
     540:	c1 e0       	ldi	r28, 0x01	; 1
     542:	d0 e0       	ldi	r29, 0x00	; 0
     544:	0d 2c       	mov	r0, r13
     546:	02 c0       	rjmp	.+4      	; 0x54c <sw_serial_getc+0x2e>
     548:	cc 0f       	add	r28, r28
     54a:	dd 1f       	adc	r29, r29
     54c:	0a 94       	dec	r0
     54e:	e2 f7       	brpl	.-8      	; 0x548 <sw_serial_getc+0x2a>
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	8c 23       	and	r24, r28
     554:	9d 23       	and	r25, r29
     556:	0d 2c       	mov	r0, r13
     558:	02 c0       	rjmp	.+4      	; 0x55e <sw_serial_getc+0x40>
     55a:	95 95       	asr	r25
     55c:	87 95       	ror	r24
     55e:	0a 94       	dec	r0
     560:	e2 f7       	brpl	.-8      	; 0x55a <sw_serial_getc+0x3c>
     562:	01 97       	sbiw	r24, 0x01	; 1
     564:	89 f4       	brne	.+34     	; 0x588 <sw_serial_getc+0x6a>
     566:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
	{
		delay_usec(delay_time);
     56a:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
     56e:	9c de       	rcall	.-712    	; 0x2a8 <delay_usec>
     570:	85 b1       	in	r24, 0x05	; 5
{
	int rx_bit_num = get_portb_bit_number(rx_pin);
	int databits = get_num_data_bits();
	char result = 0;
	
	while((PORTB & (0x1 << rx_bit_num)) >> rx_bit_num == 1)
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	8c 23       	and	r24, r28
     576:	9d 23       	and	r25, r29
     578:	0d 2c       	mov	r0, r13
     57a:	02 c0       	rjmp	.+4      	; 0x580 <sw_serial_getc+0x62>
     57c:	95 95       	asr	r25
     57e:	87 95       	ror	r24
     580:	0a 94       	dec	r0
     582:	e2 f7       	brpl	.-8      	; 0x57c <sw_serial_getc+0x5e>
     584:	01 97       	sbiw	r24, 0x01	; 1
     586:	79 f3       	breq	.-34     	; 0x566 <sw_serial_getc+0x48>
     588:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
	{
		delay_usec(delay_time);
	}
	delay_usec(delay_time);
     58c:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
     590:	8b de       	rcall	.-746    	; 0x2a8 <delay_usec>
     592:	10 16       	cp	r1, r16
	for(int i = 0; i < databits; i++)
     594:	11 06       	cpc	r1, r17
     596:	04 f5       	brge	.+64     	; 0x5d8 <sw_serial_getc+0xba>
     598:	e1 2c       	mov	r14, r1
     59a:	f1 2c       	mov	r15, r1
     59c:	c1 2c       	mov	r12, r1
     59e:	85 b1       	in	r24, 0x05	; 5
	{
		result |= ((PORTB & (0x1 << rx_bit_num)) >> rx_bit_num) << i;
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	8c 23       	and	r24, r28
     5a4:	9d 23       	and	r25, r29
     5a6:	0d 2c       	mov	r0, r13
     5a8:	02 c0       	rjmp	.+4      	; 0x5ae <sw_serial_getc+0x90>
     5aa:	95 95       	asr	r25
     5ac:	87 95       	ror	r24
     5ae:	0a 94       	dec	r0
     5b0:	e2 f7       	brpl	.-8      	; 0x5aa <sw_serial_getc+0x8c>
     5b2:	0e 2c       	mov	r0, r14
     5b4:	02 c0       	rjmp	.+4      	; 0x5ba <sw_serial_getc+0x9c>
     5b6:	88 0f       	add	r24, r24
     5b8:	99 1f       	adc	r25, r25
     5ba:	0a 94       	dec	r0
     5bc:	e2 f7       	brpl	.-8      	; 0x5b6 <sw_serial_getc+0x98>
     5be:	c8 2a       	or	r12, r24
     5c0:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
		delay_usec(delay_time);
     5c4:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
     5c8:	6f de       	rcall	.-802    	; 0x2a8 <delay_usec>
     5ca:	8f ef       	ldi	r24, 0xFF	; 255
	while((PORTB & (0x1 << rx_bit_num)) >> rx_bit_num == 1)
	{
		delay_usec(delay_time);
	}
	delay_usec(delay_time);
	for(int i = 0; i < databits; i++)
     5cc:	e8 1a       	sub	r14, r24
     5ce:	f8 0a       	sbc	r15, r24
     5d0:	0e 15       	cp	r16, r14
     5d2:	1f 05       	cpc	r17, r15
     5d4:	21 f7       	brne	.-56     	; 0x59e <sw_serial_getc+0x80>
     5d6:	01 c0       	rjmp	.+2      	; 0x5da <sw_serial_getc+0xbc>

char sw_serial_getc()
{
	int rx_bit_num = get_portb_bit_number(rx_pin);
	int databits = get_num_data_bits();
	char result = 0;
     5d8:	c1 2c       	mov	r12, r1
	for(int i = 0; i < databits; i++)
	{
		result |= ((PORTB & (0x1 << rx_bit_num)) >> rx_bit_num) << i;
		delay_usec(delay_time);
	}
	if (get_parity() != 0)
     5da:	78 df       	rcall	.-272    	; 0x4cc <get_parity>
     5dc:	89 2b       	or	r24, r25
     5de:	31 f0       	breq	.+12     	; 0x5ec <sw_serial_getc+0xce>
	{
		int parity = ((PORTB & (0x1 << rx_bit_num)) >> rx_bit_num);
     5e0:	85 b1       	in	r24, 0x05	; 5
		delay_usec(delay_time);
     5e2:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
     5e6:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
	}
	delay_usec(delay_time);
     5ea:	5e de       	rcall	.-836    	; 0x2a8 <delay_usec>
     5ec:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
     5f0:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
	if (has_extra_stop())
     5f4:	59 de       	rcall	.-846    	; 0x2a8 <delay_usec>
     5f6:	80 df       	rcall	.-256    	; 0x4f8 <has_extra_stop>
     5f8:	89 2b       	or	r24, r25
     5fa:	29 f0       	breq	.+10     	; 0x606 <sw_serial_getc+0xe8>
	{
		delay_usec(delay_time);		
     5fc:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <delay_time>
     600:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <delay_time+0x1>
     604:	51 de       	rcall	.-862    	; 0x2a8 <delay_usec>
     606:	8c 2d       	mov	r24, r12
	}
	return result;
     608:	df 91       	pop	r29
     60a:	cf 91       	pop	r28
     60c:	1f 91       	pop	r17
     60e:	0f 91       	pop	r16
     610:	ff 90       	pop	r15
     612:	ef 90       	pop	r14
     614:	df 90       	pop	r13
     616:	cf 90       	pop	r12
     618:	08 95       	ret

0000061a <__divsf3>:
     61a:	0c d0       	rcall	.+24     	; 0x634 <__divsf3x>
     61c:	eb c0       	rjmp	.+470    	; 0x7f4 <__fp_round>
     61e:	e3 d0       	rcall	.+454    	; 0x7e6 <__fp_pscB>
     620:	40 f0       	brcs	.+16     	; 0x632 <__divsf3+0x18>
     622:	da d0       	rcall	.+436    	; 0x7d8 <__fp_pscA>
     624:	30 f0       	brcs	.+12     	; 0x632 <__divsf3+0x18>
     626:	21 f4       	brne	.+8      	; 0x630 <__divsf3+0x16>
     628:	5f 3f       	cpi	r21, 0xFF	; 255
     62a:	19 f0       	breq	.+6      	; 0x632 <__divsf3+0x18>
     62c:	cc c0       	rjmp	.+408    	; 0x7c6 <__fp_inf>
     62e:	51 11       	cpse	r21, r1
     630:	15 c1       	rjmp	.+554    	; 0x85c <__fp_szero>
     632:	cf c0       	rjmp	.+414    	; 0x7d2 <__fp_nan>

00000634 <__divsf3x>:
     634:	f0 d0       	rcall	.+480    	; 0x816 <__fp_split3>
     636:	98 f3       	brcs	.-26     	; 0x61e <__divsf3+0x4>

00000638 <__divsf3_pse>:
     638:	99 23       	and	r25, r25
     63a:	c9 f3       	breq	.-14     	; 0x62e <__divsf3+0x14>
     63c:	55 23       	and	r21, r21
     63e:	b1 f3       	breq	.-20     	; 0x62c <__divsf3+0x12>
     640:	95 1b       	sub	r25, r21
     642:	55 0b       	sbc	r21, r21
     644:	bb 27       	eor	r27, r27
     646:	aa 27       	eor	r26, r26
     648:	62 17       	cp	r22, r18
     64a:	73 07       	cpc	r23, r19
     64c:	84 07       	cpc	r24, r20
     64e:	38 f0       	brcs	.+14     	; 0x65e <__divsf3_pse+0x26>
     650:	9f 5f       	subi	r25, 0xFF	; 255
     652:	5f 4f       	sbci	r21, 0xFF	; 255
     654:	22 0f       	add	r18, r18
     656:	33 1f       	adc	r19, r19
     658:	44 1f       	adc	r20, r20
     65a:	aa 1f       	adc	r26, r26
     65c:	a9 f3       	breq	.-22     	; 0x648 <__divsf3_pse+0x10>
     65e:	33 d0       	rcall	.+102    	; 0x6c6 <__divsf3_pse+0x8e>
     660:	0e 2e       	mov	r0, r30
     662:	3a f0       	brmi	.+14     	; 0x672 <__divsf3_pse+0x3a>
     664:	e0 e8       	ldi	r30, 0x80	; 128
     666:	30 d0       	rcall	.+96     	; 0x6c8 <__divsf3_pse+0x90>
     668:	91 50       	subi	r25, 0x01	; 1
     66a:	50 40       	sbci	r21, 0x00	; 0
     66c:	e6 95       	lsr	r30
     66e:	00 1c       	adc	r0, r0
     670:	ca f7       	brpl	.-14     	; 0x664 <__divsf3_pse+0x2c>
     672:	29 d0       	rcall	.+82     	; 0x6c6 <__divsf3_pse+0x8e>
     674:	fe 2f       	mov	r31, r30
     676:	27 d0       	rcall	.+78     	; 0x6c6 <__divsf3_pse+0x8e>
     678:	66 0f       	add	r22, r22
     67a:	77 1f       	adc	r23, r23
     67c:	88 1f       	adc	r24, r24
     67e:	bb 1f       	adc	r27, r27
     680:	26 17       	cp	r18, r22
     682:	37 07       	cpc	r19, r23
     684:	48 07       	cpc	r20, r24
     686:	ab 07       	cpc	r26, r27
     688:	b0 e8       	ldi	r27, 0x80	; 128
     68a:	09 f0       	breq	.+2      	; 0x68e <__divsf3_pse+0x56>
     68c:	bb 0b       	sbc	r27, r27
     68e:	80 2d       	mov	r24, r0
     690:	bf 01       	movw	r22, r30
     692:	ff 27       	eor	r31, r31
     694:	93 58       	subi	r25, 0x83	; 131
     696:	5f 4f       	sbci	r21, 0xFF	; 255
     698:	2a f0       	brmi	.+10     	; 0x6a4 <__divsf3_pse+0x6c>
     69a:	9e 3f       	cpi	r25, 0xFE	; 254
     69c:	51 05       	cpc	r21, r1
     69e:	68 f0       	brcs	.+26     	; 0x6ba <__divsf3_pse+0x82>
     6a0:	92 c0       	rjmp	.+292    	; 0x7c6 <__fp_inf>
     6a2:	dc c0       	rjmp	.+440    	; 0x85c <__fp_szero>
     6a4:	5f 3f       	cpi	r21, 0xFF	; 255
     6a6:	ec f3       	brlt	.-6      	; 0x6a2 <__divsf3_pse+0x6a>
     6a8:	98 3e       	cpi	r25, 0xE8	; 232
     6aa:	dc f3       	brlt	.-10     	; 0x6a2 <__divsf3_pse+0x6a>
     6ac:	86 95       	lsr	r24
     6ae:	77 95       	ror	r23
     6b0:	67 95       	ror	r22
     6b2:	b7 95       	ror	r27
     6b4:	f7 95       	ror	r31
     6b6:	9f 5f       	subi	r25, 0xFF	; 255
     6b8:	c9 f7       	brne	.-14     	; 0x6ac <__divsf3_pse+0x74>
     6ba:	88 0f       	add	r24, r24
     6bc:	91 1d       	adc	r25, r1
     6be:	96 95       	lsr	r25
     6c0:	87 95       	ror	r24
     6c2:	97 f9       	bld	r25, 7
     6c4:	08 95       	ret
     6c6:	e1 e0       	ldi	r30, 0x01	; 1
     6c8:	66 0f       	add	r22, r22
     6ca:	77 1f       	adc	r23, r23
     6cc:	88 1f       	adc	r24, r24
     6ce:	bb 1f       	adc	r27, r27
     6d0:	62 17       	cp	r22, r18
     6d2:	73 07       	cpc	r23, r19
     6d4:	84 07       	cpc	r24, r20
     6d6:	ba 07       	cpc	r27, r26
     6d8:	20 f0       	brcs	.+8      	; 0x6e2 <__divsf3_pse+0xaa>
     6da:	62 1b       	sub	r22, r18
     6dc:	73 0b       	sbc	r23, r19
     6de:	84 0b       	sbc	r24, r20
     6e0:	ba 0b       	sbc	r27, r26
     6e2:	ee 1f       	adc	r30, r30
     6e4:	88 f7       	brcc	.-30     	; 0x6c8 <__divsf3_pse+0x90>
     6e6:	e0 95       	com	r30
     6e8:	08 95       	ret

000006ea <__fixsfsi>:
     6ea:	04 d0       	rcall	.+8      	; 0x6f4 <__fixunssfsi>
     6ec:	68 94       	set
     6ee:	b1 11       	cpse	r27, r1
     6f0:	b5 c0       	rjmp	.+362    	; 0x85c <__fp_szero>
     6f2:	08 95       	ret

000006f4 <__fixunssfsi>:
     6f4:	98 d0       	rcall	.+304    	; 0x826 <__fp_splitA>
     6f6:	88 f0       	brcs	.+34     	; 0x71a <__fixunssfsi+0x26>
     6f8:	9f 57       	subi	r25, 0x7F	; 127
     6fa:	90 f0       	brcs	.+36     	; 0x720 <__fixunssfsi+0x2c>
     6fc:	b9 2f       	mov	r27, r25
     6fe:	99 27       	eor	r25, r25
     700:	b7 51       	subi	r27, 0x17	; 23
     702:	a0 f0       	brcs	.+40     	; 0x72c <__fixunssfsi+0x38>
     704:	d1 f0       	breq	.+52     	; 0x73a <__fixunssfsi+0x46>
     706:	66 0f       	add	r22, r22
     708:	77 1f       	adc	r23, r23
     70a:	88 1f       	adc	r24, r24
     70c:	99 1f       	adc	r25, r25
     70e:	1a f0       	brmi	.+6      	; 0x716 <__fixunssfsi+0x22>
     710:	ba 95       	dec	r27
     712:	c9 f7       	brne	.-14     	; 0x706 <__fixunssfsi+0x12>
     714:	12 c0       	rjmp	.+36     	; 0x73a <__fixunssfsi+0x46>
     716:	b1 30       	cpi	r27, 0x01	; 1
     718:	81 f0       	breq	.+32     	; 0x73a <__fixunssfsi+0x46>
     71a:	9f d0       	rcall	.+318    	; 0x85a <__fp_zero>
     71c:	b1 e0       	ldi	r27, 0x01	; 1
     71e:	08 95       	ret
     720:	9c c0       	rjmp	.+312    	; 0x85a <__fp_zero>
     722:	67 2f       	mov	r22, r23
     724:	78 2f       	mov	r23, r24
     726:	88 27       	eor	r24, r24
     728:	b8 5f       	subi	r27, 0xF8	; 248
     72a:	39 f0       	breq	.+14     	; 0x73a <__fixunssfsi+0x46>
     72c:	b9 3f       	cpi	r27, 0xF9	; 249
     72e:	cc f3       	brlt	.-14     	; 0x722 <__fixunssfsi+0x2e>
     730:	86 95       	lsr	r24
     732:	77 95       	ror	r23
     734:	67 95       	ror	r22
     736:	b3 95       	inc	r27
     738:	d9 f7       	brne	.-10     	; 0x730 <__fixunssfsi+0x3c>
     73a:	3e f4       	brtc	.+14     	; 0x74a <__fixunssfsi+0x56>
     73c:	90 95       	com	r25
     73e:	80 95       	com	r24
     740:	70 95       	com	r23
     742:	61 95       	neg	r22
     744:	7f 4f       	sbci	r23, 0xFF	; 255
     746:	8f 4f       	sbci	r24, 0xFF	; 255
     748:	9f 4f       	sbci	r25, 0xFF	; 255
     74a:	08 95       	ret

0000074c <__floatunsisf>:
     74c:	e8 94       	clt
     74e:	09 c0       	rjmp	.+18     	; 0x762 <__floatsisf+0x12>

00000750 <__floatsisf>:
     750:	97 fb       	bst	r25, 7
     752:	3e f4       	brtc	.+14     	; 0x762 <__floatsisf+0x12>
     754:	90 95       	com	r25
     756:	80 95       	com	r24
     758:	70 95       	com	r23
     75a:	61 95       	neg	r22
     75c:	7f 4f       	sbci	r23, 0xFF	; 255
     75e:	8f 4f       	sbci	r24, 0xFF	; 255
     760:	9f 4f       	sbci	r25, 0xFF	; 255
     762:	99 23       	and	r25, r25
     764:	a9 f0       	breq	.+42     	; 0x790 <__floatsisf+0x40>
     766:	f9 2f       	mov	r31, r25
     768:	96 e9       	ldi	r25, 0x96	; 150
     76a:	bb 27       	eor	r27, r27
     76c:	93 95       	inc	r25
     76e:	f6 95       	lsr	r31
     770:	87 95       	ror	r24
     772:	77 95       	ror	r23
     774:	67 95       	ror	r22
     776:	b7 95       	ror	r27
     778:	f1 11       	cpse	r31, r1
     77a:	f8 cf       	rjmp	.-16     	; 0x76c <__floatsisf+0x1c>
     77c:	fa f4       	brpl	.+62     	; 0x7bc <__floatsisf+0x6c>
     77e:	bb 0f       	add	r27, r27
     780:	11 f4       	brne	.+4      	; 0x786 <__floatsisf+0x36>
     782:	60 ff       	sbrs	r22, 0
     784:	1b c0       	rjmp	.+54     	; 0x7bc <__floatsisf+0x6c>
     786:	6f 5f       	subi	r22, 0xFF	; 255
     788:	7f 4f       	sbci	r23, 0xFF	; 255
     78a:	8f 4f       	sbci	r24, 0xFF	; 255
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	16 c0       	rjmp	.+44     	; 0x7bc <__floatsisf+0x6c>
     790:	88 23       	and	r24, r24
     792:	11 f0       	breq	.+4      	; 0x798 <__floatsisf+0x48>
     794:	96 e9       	ldi	r25, 0x96	; 150
     796:	11 c0       	rjmp	.+34     	; 0x7ba <__floatsisf+0x6a>
     798:	77 23       	and	r23, r23
     79a:	21 f0       	breq	.+8      	; 0x7a4 <__floatsisf+0x54>
     79c:	9e e8       	ldi	r25, 0x8E	; 142
     79e:	87 2f       	mov	r24, r23
     7a0:	76 2f       	mov	r23, r22
     7a2:	05 c0       	rjmp	.+10     	; 0x7ae <__floatsisf+0x5e>
     7a4:	66 23       	and	r22, r22
     7a6:	71 f0       	breq	.+28     	; 0x7c4 <__floatsisf+0x74>
     7a8:	96 e8       	ldi	r25, 0x86	; 134
     7aa:	86 2f       	mov	r24, r22
     7ac:	70 e0       	ldi	r23, 0x00	; 0
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	2a f0       	brmi	.+10     	; 0x7bc <__floatsisf+0x6c>
     7b2:	9a 95       	dec	r25
     7b4:	66 0f       	add	r22, r22
     7b6:	77 1f       	adc	r23, r23
     7b8:	88 1f       	adc	r24, r24
     7ba:	da f7       	brpl	.-10     	; 0x7b2 <__floatsisf+0x62>
     7bc:	88 0f       	add	r24, r24
     7be:	96 95       	lsr	r25
     7c0:	87 95       	ror	r24
     7c2:	97 f9       	bld	r25, 7
     7c4:	08 95       	ret

000007c6 <__fp_inf>:
     7c6:	97 f9       	bld	r25, 7
     7c8:	9f 67       	ori	r25, 0x7F	; 127
     7ca:	80 e8       	ldi	r24, 0x80	; 128
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	08 95       	ret

000007d2 <__fp_nan>:
     7d2:	9f ef       	ldi	r25, 0xFF	; 255
     7d4:	80 ec       	ldi	r24, 0xC0	; 192
     7d6:	08 95       	ret

000007d8 <__fp_pscA>:
     7d8:	00 24       	eor	r0, r0
     7da:	0a 94       	dec	r0
     7dc:	16 16       	cp	r1, r22
     7de:	17 06       	cpc	r1, r23
     7e0:	18 06       	cpc	r1, r24
     7e2:	09 06       	cpc	r0, r25
     7e4:	08 95       	ret

000007e6 <__fp_pscB>:
     7e6:	00 24       	eor	r0, r0
     7e8:	0a 94       	dec	r0
     7ea:	12 16       	cp	r1, r18
     7ec:	13 06       	cpc	r1, r19
     7ee:	14 06       	cpc	r1, r20
     7f0:	05 06       	cpc	r0, r21
     7f2:	08 95       	ret

000007f4 <__fp_round>:
     7f4:	09 2e       	mov	r0, r25
     7f6:	03 94       	inc	r0
     7f8:	00 0c       	add	r0, r0
     7fa:	11 f4       	brne	.+4      	; 0x800 <__fp_round+0xc>
     7fc:	88 23       	and	r24, r24
     7fe:	52 f0       	brmi	.+20     	; 0x814 <__fp_round+0x20>
     800:	bb 0f       	add	r27, r27
     802:	40 f4       	brcc	.+16     	; 0x814 <__fp_round+0x20>
     804:	bf 2b       	or	r27, r31
     806:	11 f4       	brne	.+4      	; 0x80c <__fp_round+0x18>
     808:	60 ff       	sbrs	r22, 0
     80a:	04 c0       	rjmp	.+8      	; 0x814 <__fp_round+0x20>
     80c:	6f 5f       	subi	r22, 0xFF	; 255
     80e:	7f 4f       	sbci	r23, 0xFF	; 255
     810:	8f 4f       	sbci	r24, 0xFF	; 255
     812:	9f 4f       	sbci	r25, 0xFF	; 255
     814:	08 95       	ret

00000816 <__fp_split3>:
     816:	57 fd       	sbrc	r21, 7
     818:	90 58       	subi	r25, 0x80	; 128
     81a:	44 0f       	add	r20, r20
     81c:	55 1f       	adc	r21, r21
     81e:	59 f0       	breq	.+22     	; 0x836 <__fp_splitA+0x10>
     820:	5f 3f       	cpi	r21, 0xFF	; 255
     822:	71 f0       	breq	.+28     	; 0x840 <__fp_splitA+0x1a>
     824:	47 95       	ror	r20

00000826 <__fp_splitA>:
     826:	88 0f       	add	r24, r24
     828:	97 fb       	bst	r25, 7
     82a:	99 1f       	adc	r25, r25
     82c:	61 f0       	breq	.+24     	; 0x846 <__fp_splitA+0x20>
     82e:	9f 3f       	cpi	r25, 0xFF	; 255
     830:	79 f0       	breq	.+30     	; 0x850 <__fp_splitA+0x2a>
     832:	87 95       	ror	r24
     834:	08 95       	ret
     836:	12 16       	cp	r1, r18
     838:	13 06       	cpc	r1, r19
     83a:	14 06       	cpc	r1, r20
     83c:	55 1f       	adc	r21, r21
     83e:	f2 cf       	rjmp	.-28     	; 0x824 <__fp_split3+0xe>
     840:	46 95       	lsr	r20
     842:	f1 df       	rcall	.-30     	; 0x826 <__fp_splitA>
     844:	08 c0       	rjmp	.+16     	; 0x856 <__fp_splitA+0x30>
     846:	16 16       	cp	r1, r22
     848:	17 06       	cpc	r1, r23
     84a:	18 06       	cpc	r1, r24
     84c:	99 1f       	adc	r25, r25
     84e:	f1 cf       	rjmp	.-30     	; 0x832 <__fp_splitA+0xc>
     850:	86 95       	lsr	r24
     852:	71 05       	cpc	r23, r1
     854:	61 05       	cpc	r22, r1
     856:	08 94       	sec
     858:	08 95       	ret

0000085a <__fp_zero>:
     85a:	e8 94       	clt

0000085c <__fp_szero>:
     85c:	bb 27       	eor	r27, r27
     85e:	66 27       	eor	r22, r22
     860:	77 27       	eor	r23, r23
     862:	cb 01       	movw	r24, r22
     864:	97 f9       	bld	r25, 7
     866:	08 95       	ret

00000868 <__mulsf3>:
     868:	0b d0       	rcall	.+22     	; 0x880 <__mulsf3x>
     86a:	c4 cf       	rjmp	.-120    	; 0x7f4 <__fp_round>
     86c:	b5 df       	rcall	.-150    	; 0x7d8 <__fp_pscA>
     86e:	28 f0       	brcs	.+10     	; 0x87a <__mulsf3+0x12>
     870:	ba df       	rcall	.-140    	; 0x7e6 <__fp_pscB>
     872:	18 f0       	brcs	.+6      	; 0x87a <__mulsf3+0x12>
     874:	95 23       	and	r25, r21
     876:	09 f0       	breq	.+2      	; 0x87a <__mulsf3+0x12>
     878:	a6 cf       	rjmp	.-180    	; 0x7c6 <__fp_inf>
     87a:	ab cf       	rjmp	.-170    	; 0x7d2 <__fp_nan>
     87c:	11 24       	eor	r1, r1
     87e:	ee cf       	rjmp	.-36     	; 0x85c <__fp_szero>

00000880 <__mulsf3x>:
     880:	ca df       	rcall	.-108    	; 0x816 <__fp_split3>
     882:	a0 f3       	brcs	.-24     	; 0x86c <__mulsf3+0x4>

00000884 <__mulsf3_pse>:
     884:	95 9f       	mul	r25, r21
     886:	d1 f3       	breq	.-12     	; 0x87c <__mulsf3+0x14>
     888:	95 0f       	add	r25, r21
     88a:	50 e0       	ldi	r21, 0x00	; 0
     88c:	55 1f       	adc	r21, r21
     88e:	62 9f       	mul	r22, r18
     890:	f0 01       	movw	r30, r0
     892:	72 9f       	mul	r23, r18
     894:	bb 27       	eor	r27, r27
     896:	f0 0d       	add	r31, r0
     898:	b1 1d       	adc	r27, r1
     89a:	63 9f       	mul	r22, r19
     89c:	aa 27       	eor	r26, r26
     89e:	f0 0d       	add	r31, r0
     8a0:	b1 1d       	adc	r27, r1
     8a2:	aa 1f       	adc	r26, r26
     8a4:	64 9f       	mul	r22, r20
     8a6:	66 27       	eor	r22, r22
     8a8:	b0 0d       	add	r27, r0
     8aa:	a1 1d       	adc	r26, r1
     8ac:	66 1f       	adc	r22, r22
     8ae:	82 9f       	mul	r24, r18
     8b0:	22 27       	eor	r18, r18
     8b2:	b0 0d       	add	r27, r0
     8b4:	a1 1d       	adc	r26, r1
     8b6:	62 1f       	adc	r22, r18
     8b8:	73 9f       	mul	r23, r19
     8ba:	b0 0d       	add	r27, r0
     8bc:	a1 1d       	adc	r26, r1
     8be:	62 1f       	adc	r22, r18
     8c0:	83 9f       	mul	r24, r19
     8c2:	a0 0d       	add	r26, r0
     8c4:	61 1d       	adc	r22, r1
     8c6:	22 1f       	adc	r18, r18
     8c8:	74 9f       	mul	r23, r20
     8ca:	33 27       	eor	r19, r19
     8cc:	a0 0d       	add	r26, r0
     8ce:	61 1d       	adc	r22, r1
     8d0:	23 1f       	adc	r18, r19
     8d2:	84 9f       	mul	r24, r20
     8d4:	60 0d       	add	r22, r0
     8d6:	21 1d       	adc	r18, r1
     8d8:	82 2f       	mov	r24, r18
     8da:	76 2f       	mov	r23, r22
     8dc:	6a 2f       	mov	r22, r26
     8de:	11 24       	eor	r1, r1
     8e0:	9f 57       	subi	r25, 0x7F	; 127
     8e2:	50 40       	sbci	r21, 0x00	; 0
     8e4:	8a f0       	brmi	.+34     	; 0x908 <__mulsf3_pse+0x84>
     8e6:	e1 f0       	breq	.+56     	; 0x920 <__mulsf3_pse+0x9c>
     8e8:	88 23       	and	r24, r24
     8ea:	4a f0       	brmi	.+18     	; 0x8fe <__mulsf3_pse+0x7a>
     8ec:	ee 0f       	add	r30, r30
     8ee:	ff 1f       	adc	r31, r31
     8f0:	bb 1f       	adc	r27, r27
     8f2:	66 1f       	adc	r22, r22
     8f4:	77 1f       	adc	r23, r23
     8f6:	88 1f       	adc	r24, r24
     8f8:	91 50       	subi	r25, 0x01	; 1
     8fa:	50 40       	sbci	r21, 0x00	; 0
     8fc:	a9 f7       	brne	.-22     	; 0x8e8 <__mulsf3_pse+0x64>
     8fe:	9e 3f       	cpi	r25, 0xFE	; 254
     900:	51 05       	cpc	r21, r1
     902:	70 f0       	brcs	.+28     	; 0x920 <__mulsf3_pse+0x9c>
     904:	60 cf       	rjmp	.-320    	; 0x7c6 <__fp_inf>
     906:	aa cf       	rjmp	.-172    	; 0x85c <__fp_szero>
     908:	5f 3f       	cpi	r21, 0xFF	; 255
     90a:	ec f3       	brlt	.-6      	; 0x906 <__mulsf3_pse+0x82>
     90c:	98 3e       	cpi	r25, 0xE8	; 232
     90e:	dc f3       	brlt	.-10     	; 0x906 <__mulsf3_pse+0x82>
     910:	86 95       	lsr	r24
     912:	77 95       	ror	r23
     914:	67 95       	ror	r22
     916:	b7 95       	ror	r27
     918:	f7 95       	ror	r31
     91a:	e7 95       	ror	r30
     91c:	9f 5f       	subi	r25, 0xFF	; 255
     91e:	c1 f7       	brne	.-16     	; 0x910 <__mulsf3_pse+0x8c>
     920:	fe 2b       	or	r31, r30
     922:	88 0f       	add	r24, r24
     924:	91 1d       	adc	r25, r1
     926:	96 95       	lsr	r25
     928:	87 95       	ror	r24
     92a:	97 f9       	bld	r25, 7
     92c:	08 95       	ret

0000092e <Q_getc>:
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	eb 01       	movw	r28, r22
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	fc 01       	movw	r30, r24
     938:	ee 0f       	add	r30, r30
     93a:	ff 1f       	adc	r31, r31
     93c:	ee 0f       	add	r30, r30
     93e:	ff 1f       	adc	r31, r31
     940:	ee 0f       	add	r30, r30
     942:	ff 1f       	adc	r31, r31
     944:	e0 59       	subi	r30, 0x90	; 144
     946:	fd 4f       	sbci	r31, 0xFD	; 253
     948:	23 81       	ldd	r18, Z+3	; 0x03
     94a:	21 fd       	sbrc	r18, 1
     94c:	3a c0       	rjmp	.+116    	; 0x9c2 <Q_getc+0x94>
     94e:	7f b7       	in	r23, 0x3f	; 63
     950:	f8 94       	cli
     952:	fc 01       	movw	r30, r24
     954:	ee 0f       	add	r30, r30
     956:	ff 1f       	adc	r31, r31
     958:	ee 0f       	add	r30, r30
     95a:	ff 1f       	adc	r31, r31
     95c:	ee 0f       	add	r30, r30
     95e:	ff 1f       	adc	r31, r31
     960:	e0 59       	subi	r30, 0x90	; 144
     962:	fd 4f       	sbci	r31, 0xFD	; 253
     964:	21 81       	ldd	r18, Z+1	; 0x01
     966:	a6 81       	ldd	r26, Z+6	; 0x06
     968:	b7 81       	ldd	r27, Z+7	; 0x07
     96a:	a2 0f       	add	r26, r18
     96c:	b1 1d       	adc	r27, r1
     96e:	3c 91       	ld	r19, X
     970:	38 83       	st	Y, r19
     972:	2f 5f       	subi	r18, 0xFF	; 255
     974:	32 81       	ldd	r19, Z+2	; 0x02
     976:	23 23       	and	r18, r19
     978:	21 83       	std	Z+1, r18	; 0x01
     97a:	44 81       	ldd	r20, Z+4	; 0x04
     97c:	55 81       	ldd	r21, Z+5	; 0x05
     97e:	41 50       	subi	r20, 0x01	; 1
     980:	51 09       	sbc	r21, r1
     982:	55 83       	std	Z+5, r21	; 0x05
     984:	44 83       	std	Z+4, r20	; 0x04
     986:	30 81       	ld	r19, Z
     988:	23 13       	cpse	r18, r19
     98a:	0c c0       	rjmp	.+24     	; 0x9a4 <Q_getc+0x76>
     98c:	fc 01       	movw	r30, r24
     98e:	ee 0f       	add	r30, r30
     990:	ff 1f       	adc	r31, r31
     992:	ee 0f       	add	r30, r30
     994:	ff 1f       	adc	r31, r31
     996:	ee 0f       	add	r30, r30
     998:	ff 1f       	adc	r31, r31
     99a:	e0 59       	subi	r30, 0x90	; 144
     99c:	fd 4f       	sbci	r31, 0xFD	; 253
     99e:	23 81       	ldd	r18, Z+3	; 0x03
     9a0:	22 60       	ori	r18, 0x02	; 2
     9a2:	23 83       	std	Z+3, r18	; 0x03
     9a4:	88 0f       	add	r24, r24
     9a6:	99 1f       	adc	r25, r25
     9a8:	88 0f       	add	r24, r24
     9aa:	99 1f       	adc	r25, r25
     9ac:	88 0f       	add	r24, r24
     9ae:	99 1f       	adc	r25, r25
     9b0:	fc 01       	movw	r30, r24
     9b2:	e0 59       	subi	r30, 0x90	; 144
     9b4:	fd 4f       	sbci	r31, 0xFD	; 253
     9b6:	83 81       	ldd	r24, Z+3	; 0x03
     9b8:	8e 7f       	andi	r24, 0xFE	; 254
     9ba:	83 83       	std	Z+3, r24	; 0x03
     9bc:	7f bf       	out	0x3f, r23	; 63
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	01 c0       	rjmp	.+2      	; 0x9c4 <Q_getc+0x96>
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	df 91       	pop	r29
     9c6:	cf 91       	pop	r28
     9c8:	08 95       	ret

000009ca <__vector_26>:
     9ca:	1f 92       	push	r1
     9cc:	0f 92       	push	r0
     9ce:	0f b6       	in	r0, 0x3f	; 63
     9d0:	0f 92       	push	r0
     9d2:	11 24       	eor	r1, r1
     9d4:	0b b6       	in	r0, 0x3b	; 59
     9d6:	0f 92       	push	r0
     9d8:	2f 93       	push	r18
     9da:	3f 93       	push	r19
     9dc:	4f 93       	push	r20
     9de:	5f 93       	push	r21
     9e0:	6f 93       	push	r22
     9e2:	7f 93       	push	r23
     9e4:	8f 93       	push	r24
     9e6:	9f 93       	push	r25
     9e8:	af 93       	push	r26
     9ea:	bf 93       	push	r27
     9ec:	ef 93       	push	r30
     9ee:	ff 93       	push	r31
     9f0:	cf 93       	push	r28
     9f2:	df 93       	push	r29
     9f4:	1f 92       	push	r1
     9f6:	cd b7       	in	r28, 0x3d	; 61
     9f8:	de b7       	in	r29, 0x3e	; 62
     9fa:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <__data_start+0x1>
     9fe:	e8 2f       	mov	r30, r24
     a00:	f0 e0       	ldi	r31, 0x00	; 0
     a02:	ee 0f       	add	r30, r30
     a04:	ff 1f       	adc	r31, r31
     a06:	ee 0f       	add	r30, r30
     a08:	ff 1f       	adc	r31, r31
     a0a:	ee 0f       	add	r30, r30
     a0c:	ff 1f       	adc	r31, r31
     a0e:	e0 59       	subi	r30, 0x90	; 144
     a10:	fd 4f       	sbci	r31, 0xFD	; 253
     a12:	93 81       	ldd	r25, Z+3	; 0x03
     a14:	91 ff       	sbrs	r25, 1
     a16:	08 c0       	rjmp	.+16     	; 0xa28 <__vector_26+0x5e>
     a18:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <serialregs>
     a1c:	f0 91 29 02 	lds	r31, 0x0229	; 0x800229 <serialregs+0x1>
     a20:	81 81       	ldd	r24, Z+1	; 0x01
     a22:	8f 7d       	andi	r24, 0xDF	; 223
     a24:	81 83       	std	Z+1, r24	; 0x01
     a26:	07 c0       	rjmp	.+14     	; 0xa36 <__vector_26+0x6c>
     a28:	be 01       	movw	r22, r28
     a2a:	6f 5f       	subi	r22, 0xFF	; 255
     a2c:	7f 4f       	sbci	r23, 0xFF	; 255
     a2e:	7f df       	rcall	.-258    	; 0x92e <Q_getc>
     a30:	89 81       	ldd	r24, Y+1	; 0x01
     a32:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     a36:	0f 90       	pop	r0
     a38:	df 91       	pop	r29
     a3a:	cf 91       	pop	r28
     a3c:	ff 91       	pop	r31
     a3e:	ef 91       	pop	r30
     a40:	bf 91       	pop	r27
     a42:	af 91       	pop	r26
     a44:	9f 91       	pop	r25
     a46:	8f 91       	pop	r24
     a48:	7f 91       	pop	r23
     a4a:	6f 91       	pop	r22
     a4c:	5f 91       	pop	r21
     a4e:	4f 91       	pop	r20
     a50:	3f 91       	pop	r19
     a52:	2f 91       	pop	r18
     a54:	0f 90       	pop	r0
     a56:	0b be       	out	0x3b, r0	; 59
     a58:	0f 90       	pop	r0
     a5a:	0f be       	out	0x3f, r0	; 63
     a5c:	0f 90       	pop	r0
     a5e:	1f 90       	pop	r1
     a60:	18 95       	reti

00000a62 <__vector_37>:
     a62:	1f 92       	push	r1
     a64:	0f 92       	push	r0
     a66:	0f b6       	in	r0, 0x3f	; 63
     a68:	0f 92       	push	r0
     a6a:	11 24       	eor	r1, r1
     a6c:	0b b6       	in	r0, 0x3b	; 59
     a6e:	0f 92       	push	r0
     a70:	2f 93       	push	r18
     a72:	3f 93       	push	r19
     a74:	4f 93       	push	r20
     a76:	5f 93       	push	r21
     a78:	6f 93       	push	r22
     a7a:	7f 93       	push	r23
     a7c:	8f 93       	push	r24
     a7e:	9f 93       	push	r25
     a80:	af 93       	push	r26
     a82:	bf 93       	push	r27
     a84:	ef 93       	push	r30
     a86:	ff 93       	push	r31
     a88:	cf 93       	push	r28
     a8a:	df 93       	push	r29
     a8c:	1f 92       	push	r1
     a8e:	cd b7       	in	r28, 0x3d	; 61
     a90:	de b7       	in	r29, 0x3e	; 62
     a92:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <__data_start+0xb>
     a96:	e8 2f       	mov	r30, r24
     a98:	f0 e0       	ldi	r31, 0x00	; 0
     a9a:	ee 0f       	add	r30, r30
     a9c:	ff 1f       	adc	r31, r31
     a9e:	ee 0f       	add	r30, r30
     aa0:	ff 1f       	adc	r31, r31
     aa2:	ee 0f       	add	r30, r30
     aa4:	ff 1f       	adc	r31, r31
     aa6:	e0 59       	subi	r30, 0x90	; 144
     aa8:	fd 4f       	sbci	r31, 0xFD	; 253
     aaa:	93 81       	ldd	r25, Z+3	; 0x03
     aac:	91 ff       	sbrs	r25, 1
     aae:	08 c0       	rjmp	.+16     	; 0xac0 <__vector_37+0x5e>
     ab0:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <serialregs+0x2>
     ab4:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <serialregs+0x3>
     ab8:	81 81       	ldd	r24, Z+1	; 0x01
     aba:	8f 7d       	andi	r24, 0xDF	; 223
     abc:	81 83       	std	Z+1, r24	; 0x01
     abe:	07 c0       	rjmp	.+14     	; 0xace <__vector_37+0x6c>
     ac0:	be 01       	movw	r22, r28
     ac2:	6f 5f       	subi	r22, 0xFF	; 255
     ac4:	7f 4f       	sbci	r23, 0xFF	; 255
     ac6:	33 df       	rcall	.-410    	; 0x92e <Q_getc>
     ac8:	89 81       	ldd	r24, Y+1	; 0x01
     aca:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     ace:	0f 90       	pop	r0
     ad0:	df 91       	pop	r29
     ad2:	cf 91       	pop	r28
     ad4:	ff 91       	pop	r31
     ad6:	ef 91       	pop	r30
     ad8:	bf 91       	pop	r27
     ada:	af 91       	pop	r26
     adc:	9f 91       	pop	r25
     ade:	8f 91       	pop	r24
     ae0:	7f 91       	pop	r23
     ae2:	6f 91       	pop	r22
     ae4:	5f 91       	pop	r21
     ae6:	4f 91       	pop	r20
     ae8:	3f 91       	pop	r19
     aea:	2f 91       	pop	r18
     aec:	0f 90       	pop	r0
     aee:	0b be       	out	0x3b, r0	; 59
     af0:	0f 90       	pop	r0
     af2:	0f be       	out	0x3f, r0	; 63
     af4:	0f 90       	pop	r0
     af6:	1f 90       	pop	r1
     af8:	18 95       	reti

00000afa <__vector_52>:
     afa:	1f 92       	push	r1
     afc:	0f 92       	push	r0
     afe:	0f b6       	in	r0, 0x3f	; 63
     b00:	0f 92       	push	r0
     b02:	11 24       	eor	r1, r1
     b04:	0b b6       	in	r0, 0x3b	; 59
     b06:	0f 92       	push	r0
     b08:	2f 93       	push	r18
     b0a:	3f 93       	push	r19
     b0c:	4f 93       	push	r20
     b0e:	5f 93       	push	r21
     b10:	6f 93       	push	r22
     b12:	7f 93       	push	r23
     b14:	8f 93       	push	r24
     b16:	9f 93       	push	r25
     b18:	af 93       	push	r26
     b1a:	bf 93       	push	r27
     b1c:	ef 93       	push	r30
     b1e:	ff 93       	push	r31
     b20:	cf 93       	push	r28
     b22:	df 93       	push	r29
     b24:	1f 92       	push	r1
     b26:	cd b7       	in	r28, 0x3d	; 61
     b28:	de b7       	in	r29, 0x3e	; 62
     b2a:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <__data_start+0x15>
     b2e:	e8 2f       	mov	r30, r24
     b30:	f0 e0       	ldi	r31, 0x00	; 0
     b32:	ee 0f       	add	r30, r30
     b34:	ff 1f       	adc	r31, r31
     b36:	ee 0f       	add	r30, r30
     b38:	ff 1f       	adc	r31, r31
     b3a:	ee 0f       	add	r30, r30
     b3c:	ff 1f       	adc	r31, r31
     b3e:	e0 59       	subi	r30, 0x90	; 144
     b40:	fd 4f       	sbci	r31, 0xFD	; 253
     b42:	93 81       	ldd	r25, Z+3	; 0x03
     b44:	91 ff       	sbrs	r25, 1
     b46:	08 c0       	rjmp	.+16     	; 0xb58 <__vector_52+0x5e>
     b48:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <serialregs+0x4>
     b4c:	f0 91 2d 02 	lds	r31, 0x022D	; 0x80022d <serialregs+0x5>
     b50:	81 81       	ldd	r24, Z+1	; 0x01
     b52:	8f 7d       	andi	r24, 0xDF	; 223
     b54:	81 83       	std	Z+1, r24	; 0x01
     b56:	07 c0       	rjmp	.+14     	; 0xb66 <__vector_52+0x6c>
     b58:	be 01       	movw	r22, r28
     b5a:	6f 5f       	subi	r22, 0xFF	; 255
     b5c:	7f 4f       	sbci	r23, 0xFF	; 255
     b5e:	e7 de       	rcall	.-562    	; 0x92e <Q_getc>
     b60:	89 81       	ldd	r24, Y+1	; 0x01
     b62:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     b66:	0f 90       	pop	r0
     b68:	df 91       	pop	r29
     b6a:	cf 91       	pop	r28
     b6c:	ff 91       	pop	r31
     b6e:	ef 91       	pop	r30
     b70:	bf 91       	pop	r27
     b72:	af 91       	pop	r26
     b74:	9f 91       	pop	r25
     b76:	8f 91       	pop	r24
     b78:	7f 91       	pop	r23
     b7a:	6f 91       	pop	r22
     b7c:	5f 91       	pop	r21
     b7e:	4f 91       	pop	r20
     b80:	3f 91       	pop	r19
     b82:	2f 91       	pop	r18
     b84:	0f 90       	pop	r0
     b86:	0b be       	out	0x3b, r0	; 59
     b88:	0f 90       	pop	r0
     b8a:	0f be       	out	0x3f, r0	; 63
     b8c:	0f 90       	pop	r0
     b8e:	1f 90       	pop	r1
     b90:	18 95       	reti

00000b92 <__vector_55>:
     b92:	1f 92       	push	r1
     b94:	0f 92       	push	r0
     b96:	0f b6       	in	r0, 0x3f	; 63
     b98:	0f 92       	push	r0
     b9a:	11 24       	eor	r1, r1
     b9c:	0b b6       	in	r0, 0x3b	; 59
     b9e:	0f 92       	push	r0
     ba0:	2f 93       	push	r18
     ba2:	3f 93       	push	r19
     ba4:	4f 93       	push	r20
     ba6:	5f 93       	push	r21
     ba8:	6f 93       	push	r22
     baa:	7f 93       	push	r23
     bac:	8f 93       	push	r24
     bae:	9f 93       	push	r25
     bb0:	af 93       	push	r26
     bb2:	bf 93       	push	r27
     bb4:	ef 93       	push	r30
     bb6:	ff 93       	push	r31
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	1f 92       	push	r1
     bbe:	cd b7       	in	r28, 0x3d	; 61
     bc0:	de b7       	in	r29, 0x3e	; 62
     bc2:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <__data_start+0x1f>
     bc6:	e8 2f       	mov	r30, r24
     bc8:	f0 e0       	ldi	r31, 0x00	; 0
     bca:	ee 0f       	add	r30, r30
     bcc:	ff 1f       	adc	r31, r31
     bce:	ee 0f       	add	r30, r30
     bd0:	ff 1f       	adc	r31, r31
     bd2:	ee 0f       	add	r30, r30
     bd4:	ff 1f       	adc	r31, r31
     bd6:	e0 59       	subi	r30, 0x90	; 144
     bd8:	fd 4f       	sbci	r31, 0xFD	; 253
     bda:	93 81       	ldd	r25, Z+3	; 0x03
     bdc:	91 ff       	sbrs	r25, 1
     bde:	08 c0       	rjmp	.+16     	; 0xbf0 <__vector_55+0x5e>
     be0:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <serialregs+0x6>
     be4:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <serialregs+0x7>
     be8:	81 81       	ldd	r24, Z+1	; 0x01
     bea:	8f 7d       	andi	r24, 0xDF	; 223
     bec:	81 83       	std	Z+1, r24	; 0x01
     bee:	07 c0       	rjmp	.+14     	; 0xbfe <__vector_55+0x6c>
     bf0:	be 01       	movw	r22, r28
     bf2:	6f 5f       	subi	r22, 0xFF	; 255
     bf4:	7f 4f       	sbci	r23, 0xFF	; 255
     bf6:	9b de       	rcall	.-714    	; 0x92e <Q_getc>
     bf8:	89 81       	ldd	r24, Y+1	; 0x01
     bfa:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     bfe:	0f 90       	pop	r0
     c00:	df 91       	pop	r29
     c02:	cf 91       	pop	r28
     c04:	ff 91       	pop	r31
     c06:	ef 91       	pop	r30
     c08:	bf 91       	pop	r27
     c0a:	af 91       	pop	r26
     c0c:	9f 91       	pop	r25
     c0e:	8f 91       	pop	r24
     c10:	7f 91       	pop	r23
     c12:	6f 91       	pop	r22
     c14:	5f 91       	pop	r21
     c16:	4f 91       	pop	r20
     c18:	3f 91       	pop	r19
     c1a:	2f 91       	pop	r18
     c1c:	0f 90       	pop	r0
     c1e:	0b be       	out	0x3b, r0	; 59
     c20:	0f 90       	pop	r0
     c22:	0f be       	out	0x3f, r0	; 63
     c24:	0f 90       	pop	r0
     c26:	1f 90       	pop	r1
     c28:	18 95       	reti

00000c2a <Q_putc>:
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	fc 01       	movw	r30, r24
     c2e:	ee 0f       	add	r30, r30
     c30:	ff 1f       	adc	r31, r31
     c32:	ee 0f       	add	r30, r30
     c34:	ff 1f       	adc	r31, r31
     c36:	ee 0f       	add	r30, r30
     c38:	ff 1f       	adc	r31, r31
     c3a:	e0 59       	subi	r30, 0x90	; 144
     c3c:	fd 4f       	sbci	r31, 0xFD	; 253
     c3e:	23 81       	ldd	r18, Z+3	; 0x03
     c40:	20 fd       	sbrc	r18, 0
     c42:	39 c0       	rjmp	.+114    	; 0xcb6 <Q_putc+0x8c>
     c44:	7f b7       	in	r23, 0x3f	; 63
     c46:	f8 94       	cli
     c48:	fc 01       	movw	r30, r24
     c4a:	ee 0f       	add	r30, r30
     c4c:	ff 1f       	adc	r31, r31
     c4e:	ee 0f       	add	r30, r30
     c50:	ff 1f       	adc	r31, r31
     c52:	ee 0f       	add	r30, r30
     c54:	ff 1f       	adc	r31, r31
     c56:	e0 59       	subi	r30, 0x90	; 144
     c58:	fd 4f       	sbci	r31, 0xFD	; 253
     c5a:	20 81       	ld	r18, Z
     c5c:	a6 81       	ldd	r26, Z+6	; 0x06
     c5e:	b7 81       	ldd	r27, Z+7	; 0x07
     c60:	a2 0f       	add	r26, r18
     c62:	b1 1d       	adc	r27, r1
     c64:	6c 93       	st	X, r22
     c66:	2f 5f       	subi	r18, 0xFF	; 255
     c68:	32 81       	ldd	r19, Z+2	; 0x02
     c6a:	23 23       	and	r18, r19
     c6c:	20 83       	st	Z, r18
     c6e:	44 81       	ldd	r20, Z+4	; 0x04
     c70:	55 81       	ldd	r21, Z+5	; 0x05
     c72:	4f 5f       	subi	r20, 0xFF	; 255
     c74:	5f 4f       	sbci	r21, 0xFF	; 255
     c76:	55 83       	std	Z+5, r21	; 0x05
     c78:	44 83       	std	Z+4, r20	; 0x04
     c7a:	31 81       	ldd	r19, Z+1	; 0x01
     c7c:	23 13       	cpse	r18, r19
     c7e:	0c c0       	rjmp	.+24     	; 0xc98 <Q_putc+0x6e>
     c80:	fc 01       	movw	r30, r24
     c82:	ee 0f       	add	r30, r30
     c84:	ff 1f       	adc	r31, r31
     c86:	ee 0f       	add	r30, r30
     c88:	ff 1f       	adc	r31, r31
     c8a:	ee 0f       	add	r30, r30
     c8c:	ff 1f       	adc	r31, r31
     c8e:	e0 59       	subi	r30, 0x90	; 144
     c90:	fd 4f       	sbci	r31, 0xFD	; 253
     c92:	23 81       	ldd	r18, Z+3	; 0x03
     c94:	21 60       	ori	r18, 0x01	; 1
     c96:	23 83       	std	Z+3, r18	; 0x03
     c98:	88 0f       	add	r24, r24
     c9a:	99 1f       	adc	r25, r25
     c9c:	88 0f       	add	r24, r24
     c9e:	99 1f       	adc	r25, r25
     ca0:	88 0f       	add	r24, r24
     ca2:	99 1f       	adc	r25, r25
     ca4:	fc 01       	movw	r30, r24
     ca6:	e0 59       	subi	r30, 0x90	; 144
     ca8:	fd 4f       	sbci	r31, 0xFD	; 253
     caa:	83 81       	ldd	r24, Z+3	; 0x03
     cac:	8d 7f       	andi	r24, 0xFD	; 253
     cae:	83 83       	std	Z+3, r24	; 0x03
     cb0:	7f bf       	out	0x3f, r23	; 63
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	08 95       	ret
     cb6:	80 e0       	ldi	r24, 0x00	; 0
     cb8:	08 95       	ret

00000cba <__vector_25>:
     cba:	1f 92       	push	r1
     cbc:	0f 92       	push	r0
     cbe:	0f b6       	in	r0, 0x3f	; 63
     cc0:	0f 92       	push	r0
     cc2:	11 24       	eor	r1, r1
     cc4:	0b b6       	in	r0, 0x3b	; 59
     cc6:	0f 92       	push	r0
     cc8:	2f 93       	push	r18
     cca:	3f 93       	push	r19
     ccc:	4f 93       	push	r20
     cce:	5f 93       	push	r21
     cd0:	6f 93       	push	r22
     cd2:	7f 93       	push	r23
     cd4:	8f 93       	push	r24
     cd6:	9f 93       	push	r25
     cd8:	af 93       	push	r26
     cda:	bf 93       	push	r27
     cdc:	ef 93       	push	r30
     cde:	ff 93       	push	r31
     ce0:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     ce4:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     ce8:	a0 df       	rcall	.-192    	; 0xc2a <Q_putc>
     cea:	ff 91       	pop	r31
     cec:	ef 91       	pop	r30
     cee:	bf 91       	pop	r27
     cf0:	af 91       	pop	r26
     cf2:	9f 91       	pop	r25
     cf4:	8f 91       	pop	r24
     cf6:	7f 91       	pop	r23
     cf8:	6f 91       	pop	r22
     cfa:	5f 91       	pop	r21
     cfc:	4f 91       	pop	r20
     cfe:	3f 91       	pop	r19
     d00:	2f 91       	pop	r18
     d02:	0f 90       	pop	r0
     d04:	0b be       	out	0x3b, r0	; 59
     d06:	0f 90       	pop	r0
     d08:	0f be       	out	0x3f, r0	; 63
     d0a:	0f 90       	pop	r0
     d0c:	1f 90       	pop	r1
     d0e:	18 95       	reti

00000d10 <__vector_36>:
     d10:	1f 92       	push	r1
     d12:	0f 92       	push	r0
     d14:	0f b6       	in	r0, 0x3f	; 63
     d16:	0f 92       	push	r0
     d18:	11 24       	eor	r1, r1
     d1a:	0b b6       	in	r0, 0x3b	; 59
     d1c:	0f 92       	push	r0
     d1e:	2f 93       	push	r18
     d20:	3f 93       	push	r19
     d22:	4f 93       	push	r20
     d24:	5f 93       	push	r21
     d26:	6f 93       	push	r22
     d28:	7f 93       	push	r23
     d2a:	8f 93       	push	r24
     d2c:	9f 93       	push	r25
     d2e:	af 93       	push	r26
     d30:	bf 93       	push	r27
     d32:	ef 93       	push	r30
     d34:	ff 93       	push	r31
     d36:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     d3a:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <__data_start+0xa>
     d3e:	75 df       	rcall	.-278    	; 0xc2a <Q_putc>
     d40:	ff 91       	pop	r31
     d42:	ef 91       	pop	r30
     d44:	bf 91       	pop	r27
     d46:	af 91       	pop	r26
     d48:	9f 91       	pop	r25
     d4a:	8f 91       	pop	r24
     d4c:	7f 91       	pop	r23
     d4e:	6f 91       	pop	r22
     d50:	5f 91       	pop	r21
     d52:	4f 91       	pop	r20
     d54:	3f 91       	pop	r19
     d56:	2f 91       	pop	r18
     d58:	0f 90       	pop	r0
     d5a:	0b be       	out	0x3b, r0	; 59
     d5c:	0f 90       	pop	r0
     d5e:	0f be       	out	0x3f, r0	; 63
     d60:	0f 90       	pop	r0
     d62:	1f 90       	pop	r1
     d64:	18 95       	reti

00000d66 <__vector_51>:
     d66:	1f 92       	push	r1
     d68:	0f 92       	push	r0
     d6a:	0f b6       	in	r0, 0x3f	; 63
     d6c:	0f 92       	push	r0
     d6e:	11 24       	eor	r1, r1
     d70:	0b b6       	in	r0, 0x3b	; 59
     d72:	0f 92       	push	r0
     d74:	2f 93       	push	r18
     d76:	3f 93       	push	r19
     d78:	4f 93       	push	r20
     d7a:	5f 93       	push	r21
     d7c:	6f 93       	push	r22
     d7e:	7f 93       	push	r23
     d80:	8f 93       	push	r24
     d82:	9f 93       	push	r25
     d84:	af 93       	push	r26
     d86:	bf 93       	push	r27
     d88:	ef 93       	push	r30
     d8a:	ff 93       	push	r31
     d8c:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     d90:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <__data_start+0x14>
     d94:	4a df       	rcall	.-364    	; 0xc2a <Q_putc>
     d96:	ff 91       	pop	r31
     d98:	ef 91       	pop	r30
     d9a:	bf 91       	pop	r27
     d9c:	af 91       	pop	r26
     d9e:	9f 91       	pop	r25
     da0:	8f 91       	pop	r24
     da2:	7f 91       	pop	r23
     da4:	6f 91       	pop	r22
     da6:	5f 91       	pop	r21
     da8:	4f 91       	pop	r20
     daa:	3f 91       	pop	r19
     dac:	2f 91       	pop	r18
     dae:	0f 90       	pop	r0
     db0:	0b be       	out	0x3b, r0	; 59
     db2:	0f 90       	pop	r0
     db4:	0f be       	out	0x3f, r0	; 63
     db6:	0f 90       	pop	r0
     db8:	1f 90       	pop	r1
     dba:	18 95       	reti

00000dbc <__vector_54>:
     dbc:	1f 92       	push	r1
     dbe:	0f 92       	push	r0
     dc0:	0f b6       	in	r0, 0x3f	; 63
     dc2:	0f 92       	push	r0
     dc4:	11 24       	eor	r1, r1
     dc6:	0b b6       	in	r0, 0x3b	; 59
     dc8:	0f 92       	push	r0
     dca:	2f 93       	push	r18
     dcc:	3f 93       	push	r19
     dce:	4f 93       	push	r20
     dd0:	5f 93       	push	r21
     dd2:	6f 93       	push	r22
     dd4:	7f 93       	push	r23
     dd6:	8f 93       	push	r24
     dd8:	9f 93       	push	r25
     dda:	af 93       	push	r26
     ddc:	bf 93       	push	r27
     dde:	ef 93       	push	r30
     de0:	ff 93       	push	r31
     de2:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     de6:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_start+0x1e>
     dea:	1f df       	rcall	.-450    	; 0xc2a <Q_putc>
     dec:	ff 91       	pop	r31
     dee:	ef 91       	pop	r30
     df0:	bf 91       	pop	r27
     df2:	af 91       	pop	r26
     df4:	9f 91       	pop	r25
     df6:	8f 91       	pop	r24
     df8:	7f 91       	pop	r23
     dfa:	6f 91       	pop	r22
     dfc:	5f 91       	pop	r21
     dfe:	4f 91       	pop	r20
     e00:	3f 91       	pop	r19
     e02:	2f 91       	pop	r18
     e04:	0f 90       	pop	r0
     e06:	0b be       	out	0x3b, r0	; 59
     e08:	0f 90       	pop	r0
     e0a:	0f be       	out	0x3f, r0	; 63
     e0c:	0f 90       	pop	r0
     e0e:	1f 90       	pop	r1
     e10:	18 95       	reti

00000e12 <Serial0_poll_write>:
     e12:	e0 ec       	ldi	r30, 0xC0	; 192
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	90 81       	ld	r25, Z
     e18:	95 ff       	sbrs	r25, 5
     e1a:	fd cf       	rjmp	.-6      	; 0xe16 <Serial0_poll_write+0x4>
     e1c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     e20:	08 95       	ret

00000e22 <Serial0_poll_print>:
     e22:	cf 93       	push	r28
     e24:	df 93       	push	r29
     e26:	ec 01       	movw	r28, r24
     e28:	88 81       	ld	r24, Y
     e2a:	88 23       	and	r24, r24
     e2c:	29 f0       	breq	.+10     	; 0xe38 <Serial0_poll_print+0x16>
     e2e:	21 96       	adiw	r28, 0x01	; 1
     e30:	f0 df       	rcall	.-32     	; 0xe12 <Serial0_poll_write>
     e32:	89 91       	ld	r24, Y+
     e34:	81 11       	cpse	r24, r1
     e36:	fc cf       	rjmp	.-8      	; 0xe30 <Serial0_poll_print+0xe>
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	08 95       	ret

00000e3e <Serial0_config>:
     e3e:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     e42:	2f ef       	ldi	r18, 0xFF	; 255
     e44:	39 ef       	ldi	r19, 0xF9	; 249
     e46:	50 e0       	ldi	r21, 0x00	; 0
     e48:	21 50       	subi	r18, 0x01	; 1
     e4a:	30 40       	sbci	r19, 0x00	; 0
     e4c:	50 40       	sbci	r21, 0x00	; 0
     e4e:	e1 f7       	brne	.-8      	; 0xe48 <Serial0_config+0xa>
     e50:	00 c0       	rjmp	.+0      	; 0xe52 <Serial0_config+0x14>
     e52:	00 00       	nop
     e54:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     e58:	60 38       	cpi	r22, 0x80	; 128
     e5a:	20 e7       	ldi	r18, 0x70	; 112
     e5c:	72 07       	cpc	r23, r18
     e5e:	81 05       	cpc	r24, r1
     e60:	91 05       	cpc	r25, r1
     e62:	09 f4       	brne	.+2      	; 0xe66 <Serial0_config+0x28>
     e64:	8f c0       	rjmp	.+286    	; 0xf84 <Serial0_config+0x146>
     e66:	24 f5       	brge	.+72     	; 0xeb0 <Serial0_config+0x72>
     e68:	60 38       	cpi	r22, 0x80	; 128
     e6a:	55 e2       	ldi	r21, 0x25	; 37
     e6c:	75 07       	cpc	r23, r21
     e6e:	81 05       	cpc	r24, r1
     e70:	91 05       	cpc	r25, r1
     e72:	09 f4       	brne	.+2      	; 0xe76 <Serial0_config+0x38>
     e74:	63 c0       	rjmp	.+198    	; 0xf3c <Serial0_config+0xfe>
     e76:	74 f4       	brge	.+28     	; 0xe94 <Serial0_config+0x56>
     e78:	60 36       	cpi	r22, 0x60	; 96
     e7a:	39 e0       	ldi	r19, 0x09	; 9
     e7c:	73 07       	cpc	r23, r19
     e7e:	81 05       	cpc	r24, r1
     e80:	91 05       	cpc	r25, r1
     e82:	09 f4       	brne	.+2      	; 0xe86 <Serial0_config+0x48>
     e84:	43 c0       	rjmp	.+134    	; 0xf0c <Serial0_config+0xce>
     e86:	60 3c       	cpi	r22, 0xC0	; 192
     e88:	72 41       	sbci	r23, 0x12	; 18
     e8a:	81 05       	cpc	r24, r1
     e8c:	91 05       	cpc	r25, r1
     e8e:	09 f4       	brne	.+2      	; 0xe92 <Serial0_config+0x54>
     e90:	49 c0       	rjmp	.+146    	; 0xf24 <Serial0_config+0xe6>
     e92:	cb c0       	rjmp	.+406    	; 0x102a <Serial0_config+0x1ec>
     e94:	60 34       	cpi	r22, 0x40	; 64
     e96:	28 e3       	ldi	r18, 0x38	; 56
     e98:	72 07       	cpc	r23, r18
     e9a:	81 05       	cpc	r24, r1
     e9c:	91 05       	cpc	r25, r1
     e9e:	09 f4       	brne	.+2      	; 0xea2 <Serial0_config+0x64>
     ea0:	59 c0       	rjmp	.+178    	; 0xf54 <Serial0_config+0x116>
     ea2:	61 15       	cp	r22, r1
     ea4:	7b 44       	sbci	r23, 0x4B	; 75
     ea6:	81 05       	cpc	r24, r1
     ea8:	91 05       	cpc	r25, r1
     eaa:	09 f4       	brne	.+2      	; 0xeae <Serial0_config+0x70>
     eac:	5f c0       	rjmp	.+190    	; 0xf6c <Serial0_config+0x12e>
     eae:	bd c0       	rjmp	.+378    	; 0x102a <Serial0_config+0x1ec>
     eb0:	61 15       	cp	r22, r1
     eb2:	52 ec       	ldi	r21, 0xC2	; 194
     eb4:	75 07       	cpc	r23, r21
     eb6:	51 e0       	ldi	r21, 0x01	; 1
     eb8:	85 07       	cpc	r24, r21
     eba:	91 05       	cpc	r25, r1
     ebc:	09 f4       	brne	.+2      	; 0xec0 <Serial0_config+0x82>
     ebe:	86 c0       	rjmp	.+268    	; 0xfcc <Serial0_config+0x18e>
     ec0:	74 f4       	brge	.+28     	; 0xede <Serial0_config+0xa0>
     ec2:	61 15       	cp	r22, r1
     ec4:	36 e9       	ldi	r19, 0x96	; 150
     ec6:	73 07       	cpc	r23, r19
     ec8:	81 05       	cpc	r24, r1
     eca:	91 05       	cpc	r25, r1
     ecc:	09 f4       	brne	.+2      	; 0xed0 <Serial0_config+0x92>
     ece:	66 c0       	rjmp	.+204    	; 0xf9c <Serial0_config+0x15e>
     ed0:	61 15       	cp	r22, r1
     ed2:	71 4e       	sbci	r23, 0xE1	; 225
     ed4:	81 05       	cpc	r24, r1
     ed6:	91 05       	cpc	r25, r1
     ed8:	09 f4       	brne	.+2      	; 0xedc <Serial0_config+0x9e>
     eda:	6c c0       	rjmp	.+216    	; 0xfb4 <Serial0_config+0x176>
     edc:	a6 c0       	rjmp	.+332    	; 0x102a <Serial0_config+0x1ec>
     ede:	60 32       	cpi	r22, 0x20	; 32
     ee0:	21 ea       	ldi	r18, 0xA1	; 161
     ee2:	72 07       	cpc	r23, r18
     ee4:	27 e0       	ldi	r18, 0x07	; 7
     ee6:	82 07       	cpc	r24, r18
     ee8:	91 05       	cpc	r25, r1
     eea:	09 f4       	brne	.+2      	; 0xeee <Serial0_config+0xb0>
     eec:	87 c0       	rjmp	.+270    	; 0xffc <Serial0_config+0x1be>
     eee:	60 34       	cpi	r22, 0x40	; 64
     ef0:	32 e4       	ldi	r19, 0x42	; 66
     ef2:	73 07       	cpc	r23, r19
     ef4:	3f e0       	ldi	r19, 0x0F	; 15
     ef6:	83 07       	cpc	r24, r19
     ef8:	91 05       	cpc	r25, r1
     efa:	09 f4       	brne	.+2      	; 0xefe <Serial0_config+0xc0>
     efc:	8b c0       	rjmp	.+278    	; 0x1014 <Serial0_config+0x1d6>
     efe:	60 39       	cpi	r22, 0x90	; 144
     f00:	70 4d       	sbci	r23, 0xD0	; 208
     f02:	83 40       	sbci	r24, 0x03	; 3
     f04:	91 05       	cpc	r25, r1
     f06:	09 f0       	breq	.+2      	; 0xf0a <Serial0_config+0xcc>
     f08:	90 c0       	rjmp	.+288    	; 0x102a <Serial0_config+0x1ec>
     f0a:	6c c0       	rjmp	.+216    	; 0xfe4 <Serial0_config+0x1a6>
     f0c:	80 e4       	ldi	r24, 0x40	; 64
     f0e:	93 e0       	ldi	r25, 0x03	; 3
     f10:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     f14:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     f18:	e0 ec       	ldi	r30, 0xC0	; 192
     f1a:	f0 e0       	ldi	r31, 0x00	; 0
     f1c:	80 81       	ld	r24, Z
     f1e:	82 60       	ori	r24, 0x02	; 2
     f20:	80 83       	st	Z, r24
     f22:	83 c0       	rjmp	.+262    	; 0x102a <Serial0_config+0x1ec>
     f24:	80 ea       	ldi	r24, 0xA0	; 160
     f26:	91 e0       	ldi	r25, 0x01	; 1
     f28:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     f2c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     f30:	e0 ec       	ldi	r30, 0xC0	; 192
     f32:	f0 e0       	ldi	r31, 0x00	; 0
     f34:	80 81       	ld	r24, Z
     f36:	82 60       	ori	r24, 0x02	; 2
     f38:	80 83       	st	Z, r24
     f3a:	77 c0       	rjmp	.+238    	; 0x102a <Serial0_config+0x1ec>
     f3c:	87 e6       	ldi	r24, 0x67	; 103
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     f44:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     f48:	e0 ec       	ldi	r30, 0xC0	; 192
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	8d 7f       	andi	r24, 0xFD	; 253
     f50:	80 83       	st	Z, r24
     f52:	6b c0       	rjmp	.+214    	; 0x102a <Serial0_config+0x1ec>
     f54:	8a e8       	ldi	r24, 0x8A	; 138
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     f5c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     f60:	e0 ec       	ldi	r30, 0xC0	; 192
     f62:	f0 e0       	ldi	r31, 0x00	; 0
     f64:	80 81       	ld	r24, Z
     f66:	82 60       	ori	r24, 0x02	; 2
     f68:	80 83       	st	Z, r24
     f6a:	5f c0       	rjmp	.+190    	; 0x102a <Serial0_config+0x1ec>
     f6c:	83 e3       	ldi	r24, 0x33	; 51
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     f74:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     f78:	e0 ec       	ldi	r30, 0xC0	; 192
     f7a:	f0 e0       	ldi	r31, 0x00	; 0
     f7c:	80 81       	ld	r24, Z
     f7e:	8d 7f       	andi	r24, 0xFD	; 253
     f80:	80 83       	st	Z, r24
     f82:	53 c0       	rjmp	.+166    	; 0x102a <Serial0_config+0x1ec>
     f84:	84 e4       	ldi	r24, 0x44	; 68
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     f8c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     f90:	e0 ec       	ldi	r30, 0xC0	; 192
     f92:	f0 e0       	ldi	r31, 0x00	; 0
     f94:	80 81       	ld	r24, Z
     f96:	82 60       	ori	r24, 0x02	; 2
     f98:	80 83       	st	Z, r24
     f9a:	47 c0       	rjmp	.+142    	; 0x102a <Serial0_config+0x1ec>
     f9c:	89 e1       	ldi	r24, 0x19	; 25
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     fa4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     fa8:	e0 ec       	ldi	r30, 0xC0	; 192
     faa:	f0 e0       	ldi	r31, 0x00	; 0
     fac:	80 81       	ld	r24, Z
     fae:	8d 7f       	andi	r24, 0xFD	; 253
     fb0:	80 83       	st	Z, r24
     fb2:	3b c0       	rjmp	.+118    	; 0x102a <Serial0_config+0x1ec>
     fb4:	82 e2       	ldi	r24, 0x22	; 34
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     fbc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     fc0:	e0 ec       	ldi	r30, 0xC0	; 192
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	80 81       	ld	r24, Z
     fc6:	82 60       	ori	r24, 0x02	; 2
     fc8:	80 83       	st	Z, r24
     fca:	2f c0       	rjmp	.+94     	; 0x102a <Serial0_config+0x1ec>
     fcc:	80 e1       	ldi	r24, 0x10	; 16
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     fd4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     fd8:	e0 ec       	ldi	r30, 0xC0	; 192
     fda:	f0 e0       	ldi	r31, 0x00	; 0
     fdc:	80 81       	ld	r24, Z
     fde:	82 60       	ori	r24, 0x02	; 2
     fe0:	80 83       	st	Z, r24
     fe2:	23 c0       	rjmp	.+70     	; 0x102a <Serial0_config+0x1ec>
     fe4:	87 e0       	ldi	r24, 0x07	; 7
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     fec:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     ff0:	e0 ec       	ldi	r30, 0xC0	; 192
     ff2:	f0 e0       	ldi	r31, 0x00	; 0
     ff4:	80 81       	ld	r24, Z
     ff6:	82 60       	ori	r24, 0x02	; 2
     ff8:	80 83       	st	Z, r24
     ffa:	17 c0       	rjmp	.+46     	; 0x102a <Serial0_config+0x1ec>
     ffc:	83 e0       	ldi	r24, 0x03	; 3
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1004:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1008:	e0 ec       	ldi	r30, 0xC0	; 192
    100a:	f0 e0       	ldi	r31, 0x00	; 0
    100c:	80 81       	ld	r24, Z
    100e:	82 60       	ori	r24, 0x02	; 2
    1010:	80 83       	st	Z, r24
    1012:	0b c0       	rjmp	.+22     	; 0x102a <Serial0_config+0x1ec>
    1014:	81 e0       	ldi	r24, 0x01	; 1
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    101c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1020:	e0 ec       	ldi	r30, 0xC0	; 192
    1022:	f0 e0       	ldi	r31, 0x00	; 0
    1024:	80 81       	ld	r24, Z
    1026:	82 60       	ori	r24, 0x02	; 2
    1028:	80 83       	st	Z, r24
    102a:	40 93 c2 00 	sts	0x00C2, r20	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    102e:	e1 ec       	ldi	r30, 0xC1	; 193
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	80 81       	ld	r24, Z
    1034:	88 61       	ori	r24, 0x18	; 24
    1036:	80 83       	st	Z, r24
    1038:	08 95       	ret

0000103a <Serial1_config>:
    103a:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
    103e:	2f ef       	ldi	r18, 0xFF	; 255
    1040:	39 ef       	ldi	r19, 0xF9	; 249
    1042:	50 e0       	ldi	r21, 0x00	; 0
    1044:	21 50       	subi	r18, 0x01	; 1
    1046:	30 40       	sbci	r19, 0x00	; 0
    1048:	50 40       	sbci	r21, 0x00	; 0
    104a:	e1 f7       	brne	.-8      	; 0x1044 <Serial1_config+0xa>
    104c:	00 c0       	rjmp	.+0      	; 0x104e <Serial1_config+0x14>
    104e:	00 00       	nop
    1050:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    1054:	60 38       	cpi	r22, 0x80	; 128
    1056:	20 e7       	ldi	r18, 0x70	; 112
    1058:	72 07       	cpc	r23, r18
    105a:	81 05       	cpc	r24, r1
    105c:	91 05       	cpc	r25, r1
    105e:	09 f4       	brne	.+2      	; 0x1062 <Serial1_config+0x28>
    1060:	8f c0       	rjmp	.+286    	; 0x1180 <Serial1_config+0x146>
    1062:	24 f5       	brge	.+72     	; 0x10ac <Serial1_config+0x72>
    1064:	60 38       	cpi	r22, 0x80	; 128
    1066:	55 e2       	ldi	r21, 0x25	; 37
    1068:	75 07       	cpc	r23, r21
    106a:	81 05       	cpc	r24, r1
    106c:	91 05       	cpc	r25, r1
    106e:	09 f4       	brne	.+2      	; 0x1072 <Serial1_config+0x38>
    1070:	63 c0       	rjmp	.+198    	; 0x1138 <Serial1_config+0xfe>
    1072:	74 f4       	brge	.+28     	; 0x1090 <Serial1_config+0x56>
    1074:	60 36       	cpi	r22, 0x60	; 96
    1076:	39 e0       	ldi	r19, 0x09	; 9
    1078:	73 07       	cpc	r23, r19
    107a:	81 05       	cpc	r24, r1
    107c:	91 05       	cpc	r25, r1
    107e:	09 f4       	brne	.+2      	; 0x1082 <Serial1_config+0x48>
    1080:	43 c0       	rjmp	.+134    	; 0x1108 <Serial1_config+0xce>
    1082:	60 3c       	cpi	r22, 0xC0	; 192
    1084:	72 41       	sbci	r23, 0x12	; 18
    1086:	81 05       	cpc	r24, r1
    1088:	91 05       	cpc	r25, r1
    108a:	09 f4       	brne	.+2      	; 0x108e <Serial1_config+0x54>
    108c:	49 c0       	rjmp	.+146    	; 0x1120 <Serial1_config+0xe6>
    108e:	cb c0       	rjmp	.+406    	; 0x1226 <Serial1_config+0x1ec>
    1090:	60 34       	cpi	r22, 0x40	; 64
    1092:	28 e3       	ldi	r18, 0x38	; 56
    1094:	72 07       	cpc	r23, r18
    1096:	81 05       	cpc	r24, r1
    1098:	91 05       	cpc	r25, r1
    109a:	09 f4       	brne	.+2      	; 0x109e <Serial1_config+0x64>
    109c:	59 c0       	rjmp	.+178    	; 0x1150 <Serial1_config+0x116>
    109e:	61 15       	cp	r22, r1
    10a0:	7b 44       	sbci	r23, 0x4B	; 75
    10a2:	81 05       	cpc	r24, r1
    10a4:	91 05       	cpc	r25, r1
    10a6:	09 f4       	brne	.+2      	; 0x10aa <Serial1_config+0x70>
    10a8:	5f c0       	rjmp	.+190    	; 0x1168 <Serial1_config+0x12e>
    10aa:	bd c0       	rjmp	.+378    	; 0x1226 <Serial1_config+0x1ec>
    10ac:	61 15       	cp	r22, r1
    10ae:	52 ec       	ldi	r21, 0xC2	; 194
    10b0:	75 07       	cpc	r23, r21
    10b2:	51 e0       	ldi	r21, 0x01	; 1
    10b4:	85 07       	cpc	r24, r21
    10b6:	91 05       	cpc	r25, r1
    10b8:	09 f4       	brne	.+2      	; 0x10bc <Serial1_config+0x82>
    10ba:	86 c0       	rjmp	.+268    	; 0x11c8 <Serial1_config+0x18e>
    10bc:	74 f4       	brge	.+28     	; 0x10da <Serial1_config+0xa0>
    10be:	61 15       	cp	r22, r1
    10c0:	36 e9       	ldi	r19, 0x96	; 150
    10c2:	73 07       	cpc	r23, r19
    10c4:	81 05       	cpc	r24, r1
    10c6:	91 05       	cpc	r25, r1
    10c8:	09 f4       	brne	.+2      	; 0x10cc <Serial1_config+0x92>
    10ca:	66 c0       	rjmp	.+204    	; 0x1198 <Serial1_config+0x15e>
    10cc:	61 15       	cp	r22, r1
    10ce:	71 4e       	sbci	r23, 0xE1	; 225
    10d0:	81 05       	cpc	r24, r1
    10d2:	91 05       	cpc	r25, r1
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <Serial1_config+0x9e>
    10d6:	6c c0       	rjmp	.+216    	; 0x11b0 <Serial1_config+0x176>
    10d8:	a6 c0       	rjmp	.+332    	; 0x1226 <Serial1_config+0x1ec>
    10da:	60 32       	cpi	r22, 0x20	; 32
    10dc:	21 ea       	ldi	r18, 0xA1	; 161
    10de:	72 07       	cpc	r23, r18
    10e0:	27 e0       	ldi	r18, 0x07	; 7
    10e2:	82 07       	cpc	r24, r18
    10e4:	91 05       	cpc	r25, r1
    10e6:	09 f4       	brne	.+2      	; 0x10ea <Serial1_config+0xb0>
    10e8:	87 c0       	rjmp	.+270    	; 0x11f8 <Serial1_config+0x1be>
    10ea:	60 34       	cpi	r22, 0x40	; 64
    10ec:	32 e4       	ldi	r19, 0x42	; 66
    10ee:	73 07       	cpc	r23, r19
    10f0:	3f e0       	ldi	r19, 0x0F	; 15
    10f2:	83 07       	cpc	r24, r19
    10f4:	91 05       	cpc	r25, r1
    10f6:	09 f4       	brne	.+2      	; 0x10fa <Serial1_config+0xc0>
    10f8:	8b c0       	rjmp	.+278    	; 0x1210 <Serial1_config+0x1d6>
    10fa:	60 39       	cpi	r22, 0x90	; 144
    10fc:	70 4d       	sbci	r23, 0xD0	; 208
    10fe:	83 40       	sbci	r24, 0x03	; 3
    1100:	91 05       	cpc	r25, r1
    1102:	09 f0       	breq	.+2      	; 0x1106 <Serial1_config+0xcc>
    1104:	90 c0       	rjmp	.+288    	; 0x1226 <Serial1_config+0x1ec>
    1106:	6c c0       	rjmp	.+216    	; 0x11e0 <Serial1_config+0x1a6>
    1108:	80 e4       	ldi	r24, 0x40	; 64
    110a:	93 e0       	ldi	r25, 0x03	; 3
    110c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1110:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    1114:	e8 ec       	ldi	r30, 0xC8	; 200
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	82 60       	ori	r24, 0x02	; 2
    111c:	80 83       	st	Z, r24
    111e:	83 c0       	rjmp	.+262    	; 0x1226 <Serial1_config+0x1ec>
    1120:	80 ea       	ldi	r24, 0xA0	; 160
    1122:	91 e0       	ldi	r25, 0x01	; 1
    1124:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1128:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    112c:	e8 ec       	ldi	r30, 0xC8	; 200
    112e:	f0 e0       	ldi	r31, 0x00	; 0
    1130:	80 81       	ld	r24, Z
    1132:	82 60       	ori	r24, 0x02	; 2
    1134:	80 83       	st	Z, r24
    1136:	77 c0       	rjmp	.+238    	; 0x1226 <Serial1_config+0x1ec>
    1138:	87 e6       	ldi	r24, 0x67	; 103
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1140:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    1144:	e8 ec       	ldi	r30, 0xC8	; 200
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	80 81       	ld	r24, Z
    114a:	8d 7f       	andi	r24, 0xFD	; 253
    114c:	80 83       	st	Z, r24
    114e:	6b c0       	rjmp	.+214    	; 0x1226 <Serial1_config+0x1ec>
    1150:	8a e8       	ldi	r24, 0x8A	; 138
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1158:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    115c:	e8 ec       	ldi	r30, 0xC8	; 200
    115e:	f0 e0       	ldi	r31, 0x00	; 0
    1160:	80 81       	ld	r24, Z
    1162:	82 60       	ori	r24, 0x02	; 2
    1164:	80 83       	st	Z, r24
    1166:	5f c0       	rjmp	.+190    	; 0x1226 <Serial1_config+0x1ec>
    1168:	83 e3       	ldi	r24, 0x33	; 51
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1170:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    1174:	e8 ec       	ldi	r30, 0xC8	; 200
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	80 81       	ld	r24, Z
    117a:	8d 7f       	andi	r24, 0xFD	; 253
    117c:	80 83       	st	Z, r24
    117e:	53 c0       	rjmp	.+166    	; 0x1226 <Serial1_config+0x1ec>
    1180:	84 e4       	ldi	r24, 0x44	; 68
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1188:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    118c:	e8 ec       	ldi	r30, 0xC8	; 200
    118e:	f0 e0       	ldi	r31, 0x00	; 0
    1190:	80 81       	ld	r24, Z
    1192:	82 60       	ori	r24, 0x02	; 2
    1194:	80 83       	st	Z, r24
    1196:	47 c0       	rjmp	.+142    	; 0x1226 <Serial1_config+0x1ec>
    1198:	89 e1       	ldi	r24, 0x19	; 25
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    11a0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    11a4:	e8 ec       	ldi	r30, 0xC8	; 200
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	80 81       	ld	r24, Z
    11aa:	8d 7f       	andi	r24, 0xFD	; 253
    11ac:	80 83       	st	Z, r24
    11ae:	3b c0       	rjmp	.+118    	; 0x1226 <Serial1_config+0x1ec>
    11b0:	82 e2       	ldi	r24, 0x22	; 34
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    11b8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    11bc:	e8 ec       	ldi	r30, 0xC8	; 200
    11be:	f0 e0       	ldi	r31, 0x00	; 0
    11c0:	80 81       	ld	r24, Z
    11c2:	82 60       	ori	r24, 0x02	; 2
    11c4:	80 83       	st	Z, r24
    11c6:	2f c0       	rjmp	.+94     	; 0x1226 <Serial1_config+0x1ec>
    11c8:	80 e1       	ldi	r24, 0x10	; 16
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    11d0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    11d4:	e8 ec       	ldi	r30, 0xC8	; 200
    11d6:	f0 e0       	ldi	r31, 0x00	; 0
    11d8:	80 81       	ld	r24, Z
    11da:	82 60       	ori	r24, 0x02	; 2
    11dc:	80 83       	st	Z, r24
    11de:	23 c0       	rjmp	.+70     	; 0x1226 <Serial1_config+0x1ec>
    11e0:	87 e0       	ldi	r24, 0x07	; 7
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    11e8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    11ec:	e8 ec       	ldi	r30, 0xC8	; 200
    11ee:	f0 e0       	ldi	r31, 0x00	; 0
    11f0:	80 81       	ld	r24, Z
    11f2:	82 60       	ori	r24, 0x02	; 2
    11f4:	80 83       	st	Z, r24
    11f6:	17 c0       	rjmp	.+46     	; 0x1226 <Serial1_config+0x1ec>
    11f8:	83 e0       	ldi	r24, 0x03	; 3
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1200:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    1204:	e8 ec       	ldi	r30, 0xC8	; 200
    1206:	f0 e0       	ldi	r31, 0x00	; 0
    1208:	80 81       	ld	r24, Z
    120a:	82 60       	ori	r24, 0x02	; 2
    120c:	80 83       	st	Z, r24
    120e:	0b c0       	rjmp	.+22     	; 0x1226 <Serial1_config+0x1ec>
    1210:	81 e0       	ldi	r24, 0x01	; 1
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1218:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    121c:	e8 ec       	ldi	r30, 0xC8	; 200
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	80 81       	ld	r24, Z
    1222:	82 60       	ori	r24, 0x02	; 2
    1224:	80 83       	st	Z, r24
    1226:	40 93 ca 00 	sts	0x00CA, r20	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
    122a:	e9 ec       	ldi	r30, 0xC9	; 201
    122c:	f0 e0       	ldi	r31, 0x00	; 0
    122e:	80 81       	ld	r24, Z
    1230:	88 61       	ori	r24, 0x18	; 24
    1232:	80 83       	st	Z, r24
    1234:	08 95       	ret

00001236 <init_sw_serial_getc_test>:
    1236:	cf 92       	push	r12
    1238:	df 92       	push	r13
    123a:	ef 92       	push	r14
    123c:	ff 92       	push	r15
    123e:	cf 93       	push	r28
    1240:	df 93       	push	r29
    1242:	6b 01       	movw	r12, r22
    1244:	7c 01       	movw	r14, r24
    1246:	ea 01       	movw	r28, r20
    1248:	fa dd       	rcall	.-1036   	; 0xe3e <Serial0_config>
    124a:	ae 01       	movw	r20, r28
    124c:	c7 01       	movw	r24, r14
    124e:	b6 01       	movw	r22, r12
    1250:	f4 de       	rcall	.-536    	; 0x103a <Serial1_config>
    1252:	df 91       	pop	r29
    1254:	cf 91       	pop	r28
    1256:	ff 90       	pop	r15
    1258:	ef 90       	pop	r14
    125a:	df 90       	pop	r13
    125c:	cf 90       	pop	r12
    125e:	08 95       	ret

00001260 <test_sw_serial_getc>:
    1260:	cf 93       	push	r28
    1262:	e8 ec       	ldi	r30, 0xC8	; 200
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	80 81       	ld	r24, Z
    1268:	88 23       	and	r24, r24
    126a:	ec f7       	brge	.-6      	; 0x1266 <test_sw_serial_getc+0x6>
    126c:	c0 91 c8 00 	lds	r28, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
    1270:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    1274:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1278:	cc dd       	rcall	.-1128   	; 0xe12 <Serial0_poll_write>
    127a:	8c 2f       	mov	r24, r28
    127c:	8c 71       	andi	r24, 0x1C	; 28
    127e:	89 f0       	breq	.+34     	; 0x12a2 <test_sw_serial_getc+0x42>
    1280:	c4 ff       	sbrs	r28, 4
    1282:	03 c0       	rjmp	.+6      	; 0x128a <test_sw_serial_getc+0x2a>
    1284:	88 e3       	ldi	r24, 0x38	; 56
    1286:	92 e0       	ldi	r25, 0x02	; 2
    1288:	cc dd       	rcall	.-1128   	; 0xe22 <Serial0_poll_print>
    128a:	c3 ff       	sbrs	r28, 3
    128c:	03 c0       	rjmp	.+6      	; 0x1294 <test_sw_serial_getc+0x34>
    128e:	88 e4       	ldi	r24, 0x48	; 72
    1290:	92 e0       	ldi	r25, 0x02	; 2
    1292:	c7 dd       	rcall	.-1138   	; 0xe22 <Serial0_poll_print>
    1294:	c2 ff       	sbrs	r28, 2
    1296:	03 c0       	rjmp	.+6      	; 0x129e <test_sw_serial_getc+0x3e>
    1298:	88 e5       	ldi	r24, 0x58	; 88
    129a:	92 e0       	ldi	r25, 0x02	; 2
    129c:	c2 dd       	rcall	.-1148   	; 0xe22 <Serial0_poll_print>
    129e:	8a e0       	ldi	r24, 0x0A	; 10
    12a0:	b8 dd       	rcall	.-1168   	; 0xe12 <Serial0_poll_write>
    12a2:	cf 91       	pop	r28
    12a4:	08 95       	ret

000012a6 <debug_init>:
    12a6:	27 9a       	sbi	0x04, 7	; 4
    12a8:	2f 98       	cbi	0x05, 7	; 5
    12aa:	08 95       	ret

000012ac <__tablejump2__>:
    12ac:	ee 0f       	add	r30, r30
    12ae:	ff 1f       	adc	r31, r31
    12b0:	88 1f       	adc	r24, r24
    12b2:	8b bf       	out	0x3b, r24	; 59
    12b4:	07 90       	elpm	r0, Z+
    12b6:	f6 91       	elpm	r31, Z
    12b8:	e0 2d       	mov	r30, r0
    12ba:	19 94       	eijmp

000012bc <_exit>:
    12bc:	f8 94       	cli

000012be <__stop_program>:
    12be:	ff cf       	rjmp	.-2      	; 0x12be <__stop_program>
